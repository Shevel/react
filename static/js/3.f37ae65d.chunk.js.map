{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/icon/add.png","assets/icon/edit.svg","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileStatus/ProfileStatusHooks.js","components/Profile/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","styles","post","src","alt","message","likesCount","maxLengthFiled300","maxLengthCreator","MyPosts","React","memo","postElements","postsData","map","key","length","id","string","posts","header","onSubmit","postData","addPost","newPost","PostForm","handleSubmit","newMessageForm","Field","name","component","Textarea","type","placeholder","validate","reduxForm","form","MyPostsContainer","connect","state","profilePage","dispatch","postMessage","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","autoFocus","value","onChange","event","currentTarget","onBlur","updateStatus","ProfileDataForm","profile","error","createField","Input","Object","keys","contacts","ProfileInfo","isOwner","saveMainAvatar","saveProfile","s","ava_block","ava_image","avatar","photos","large","small","defaultAvatar","ava_uploader","upload_ava","e","target","files","ava_label","title","htmlFor","addIcon","height","info","full_name","fullName","formData","then","initialValues","activateEditMode","Preloader","ProfileData","profile_data","activate_edit_btn","width","editIcon","about_me","aboutMe","lookingForAJobDescription","readOnly","checked","lookingForAJob","contactTitle","contactValue","Contact","contact_value","contact_title","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.f37ae65d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Profile_img__3EK6p\",\"descriptionBlock\":\"Profile_descriptionBlock__9OwsV\",\"profile\":\"Profile_profile__15vWC\",\"avatar\":\"Profile_avatar__3MgzR\",\"info\":\"Profile_info__2nWzm\",\"full_name\":\"Profile_full_name__SJgvK\",\"about_me\":\"Profile_about_me__r-Ivn\",\"status\":\"Profile_status__2IMFW\",\"ava_block\":\"Profile_ava_block__6x96c\",\"upload_ava\":\"Profile_upload_ava__2aVps\",\"ava_uploader\":\"Profile_ava_uploader__20wJv\",\"ava_label\":\"Profile_ava_label__G3ixd\",\"contact_title\":\"Profile_contact_title__2x6DQ\",\"contact_value\":\"Profile_contact_value__26e0_\",\"ava_image\":\"Profile_ava_image__1b_Kc\",\"profile_data\":\"Profile_profile_data__CWIB-\",\"activate_edit_btn\":\"Profile_activate_edit_btn__1a1_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1vJq3\",\"newMessageForm\":\"MyPosts_newMessageForm__XA5x9\",\"header\":\"MyPosts_header__1KgIO\",\"btn\":\"MyPosts_btn__1f10X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2tBK-\"};","module.exports = __webpack_public_path__ + \"static/media/add.4cf308a4.png\";","module.exports = __webpack_public_path__ + \"static/media/edit.70454fa7.svg\";","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <img src='https://avatars.mds.yandex.net/get-pdb/1352825/a5f8fbd7-515e-49f8-81d6-be55a2daac92/s600' alt='post' />\r\n      {props.message}\r\n      <br />\r\n      <span>Like {props.likesCount}</span>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport '../../../assets/styles/buttons.css';\r\nimport { Post } from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator } from \"../../../utils/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLengthFiled300 = maxLengthCreator(300);\r\n\r\nexport const MyPosts = React.memo(props => {\r\n  const postElements = props.postsData.map((post) => (\r\n    <Post\r\n      key={props.postsData.length - post.id}\r\n      message={post.string}\r\n      likesCount={post.likesCount}\r\n    />\r\n  ));\r\n\r\n  const onSubmitPost = (postData) => {\r\n    props.addPost(postData.newPost);\r\n  };\r\n\r\n  return (\r\n\r\n    <div className={styles.posts}>\r\n      <h3 className={styles.header}>My Posts</h3>\r\n      <PostForm onSubmit={onSubmitPost} />\r\n      {postElements}\r\n    </div>\r\n  );\r\n});\r\n\r\nlet PostForm = (props) => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form className={styles.newMessageForm} onSubmit={handleSubmit}>\r\n      <Field\r\n        name=\"newPost\"\r\n        component={Textarea}\r\n        type=\"text\"\r\n        placeholder=\"Enter new post text..\"\r\n        validate={[maxLengthFiled300]}\r\n      />\r\n      <button className='btn'>Add post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nPostForm = reduxForm({ form: \"posts\" })(PostForm);\r\n","import { MyPosts } from \"./MyPosts\";\r\nimport { newPost } from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (postMessage) => {\r\n      dispatch(newPost(postMessage));\r\n    },\r\n  };\r\n};\r\n\r\nexport const MyPostsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyPosts);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../Profile.module.css\";\r\n\r\nexport const ProfileStatusHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <span className={styles.status} onClick={activateEditMode}>\r\n            {props.status || \"Set status..\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus\r\n            value={status}\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport '../../../assets/styles/buttons.css';\r\n\r\nlet ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div ><b>Full Name:</b>{createField('Full Name', 'fullName', [], Input)}</div>\r\n      <div ><b>Looking for a job:</b>{createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}</div>\r\n      <div ><b>My skills:</b>{createField('My skills', 'lookingForAJobDescription', [], Textarea)}</div>\r\n      <div ><b>About me:</b>{createField('About me', 'aboutMe', [], Textarea)}</div>\r\n      {error && <div>\r\n        <span>{error}</span>\r\n      </div>}\r\n      {\r\n        Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <div key={key}>\r\n              <b>{key}</b>{createField(key, 'contacts.' + key, [], Input)}\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      <div><button className='btn'>Save</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProfileDataForm = reduxForm({ form: \"profile\" })(ProfileDataForm);","import React, { useState } from \"react\";\r\nimport defaultAvatar from \"../../../assets/image/noavatar.jpg\";\r\nimport s from \"../Profile.module.css\";\r\nimport '../../../assets/styles/buttons.css';\r\nimport { Preloader } from \"../../common/Preloader/Preloader\";\r\nimport { ProfileStatusHooks } from \"../ProfileStatus/ProfileStatusHooks\";\r\nimport ProfileDataForm from '../ProfileDataForm/ProfileDataForm';\r\nimport addIcon from '../../../assets/icon/add.png';\r\nimport editIcon from '../../../assets/icon/edit.svg';\r\n\r\nexport const ProfileInfo = ({ profile, status, updateStatus, isOwner, saveMainAvatar, saveProfile }) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onAvaSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      saveMainAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    })\r\n  };\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className={s.profile}>\r\n        <div className={s.ava_block}>\r\n          <div className={s.ava_image}>\r\n            <img\r\n              className={s.avatar}\r\n              src={profile.photos.large || profile.photos.small || defaultAvatar}\r\n              alt=\"ava\"\r\n            />\r\n            {isOwner && (\r\n              <div className={s.ava_uploader}>\r\n                <input className={s.upload_ava} onChange={onAvaSelected} type=\"file\" id='file' />\r\n                <label className={s.ava_label} title='Change and upload avatar' htmlFor=\"file\"\r\n                >Change avatar <img src={addIcon} alt='addIcon' height='20' /></label>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={s.info}>\r\n          <div className={s.full_name}>{profile.fullName}</div>\r\n          <ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n          {editMode\r\n            ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile} />\r\n            : <ProfileData activateEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, activateEditMode }) => {\r\n  return (\r\n    <div className={s.profile_data}>\r\n      {isOwner &&\r\n        <button className={`${s.activate_edit_btn} btn`} onClick={activateEditMode}><img width={20} src={editIcon} alt='editIcon' /></button>}\r\n      <div className={s.about_me}><b>About me:</b>{` ${profile.aboutMe}`}</div>\r\n      <div className={s.about_me}><b>My skills:</b>{` ${profile.lookingForAJobDescription}`}</div>\r\n      <label className={s.about_me} htmlFor='lookingForaJob'><b>Looking for a Job</b></label>\r\n      <input id='lookingForaJob' type='checkbox' readOnly checked={profile.lookingForAJob} />\r\n      {\r\n        Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact_value}><b className={s.contact_title}>{contactTitle}</b>: {contactValue}</div>\r\n  )\r\n}","import React from \"react\";\r\nimport { MyPostsContainer } from \"./MyPosts/MyPostsContainer\";\r\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\r\n\r\nexport const Profile = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  saveMainAvatar,\r\n  saveProfile\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        saveMainAvatar={saveMainAvatar}\r\n        saveProfile={saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Profile } from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  saveMainAvatar,\r\n  saveProfile\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        saveMainAvatar={this.props.saveMainAvatar}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorizedUserId: state.auth.id,\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    saveMainAvatar,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}
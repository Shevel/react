{"version":3,"sources":["components/common/Paginator/Paginator.module.css","utils/validators.ts","components/common/FormControls/FormControls.module.css","api/api.ts","components/Header/logo.png","api/profileApi.ts","redux/profileReducer.ts","redux/dialogsReducer.ts","assets/image/noavatar.jpg","assets/icon/Spin.svg","components/Users/Users.module.css","redux/sidebarReducer.ts","api/userApi.ts","utils/objectsHelper.ts","redux/usersReducer.ts","api/authApi.ts","api/securityApi.ts","redux/authReducer.ts","redux/appReducer.ts","redux/redux-store.ts","redux/authSelectors.ts","components/Header/Header.tsx","components/LoginPage/LoginPage.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","hoc/withSuspense.tsx","components/Users/User.tsx","components/common/Paginator/Paginator.tsx","redux/usersSelectors.ts","components/Users/UsersSearchForm/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx","components/LoginPage/Login.module.css","components/common/FormControls/FormControls.tsx","components/Header/Header.module.css","components/common/Preloader/Preloader.tsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","ResultCode","ResultCodeForCaptcha","instance","axios","create","withCredentials","baseURL","headers","profileAPI","userId","get","then","response","data","status","put","photoFile","formData","FormData","append","profile","initialState","postsData","id","string","likesCount","profileReducer","state","action","type","postMessage","filter","post","photos","actions","newPost","deletePost","setStatus","setUserProfile","saveMainAvatarSuccess","getUserProfile","dispatch","a","getStatus","updateStatus","resultCode","Success","alert","saveMainAvatar","file","saveProfile","getState","profileData","auth","Error","stopSubmit","_error","messages","Promise","reject","messagesData","dialogsData","name","dialogsReducer","textMessage","sendMessage","usersAPI","currentPage","pageSize","term","friend","delete","updateObjectInArray","items","itemId","objPropName","newObjProp","map","user","users","totalUsersCount","isFetching","followingInProgress","getUsersThunk","toggleIsFetching","setCurrentPage","setFilter","setUsers","setUsersTotalCount","totalCount","followUnfollowFlow","apiMethod","actionCreator","toggleIsFollowing","followSuccess","userID","unfollowSuccess","payload","authAPI","email","password","rememberMe","captcha","securityAPI","url","login","isAuth","captchaURL","getAuthUserData","meData","getCaptchaUrl","initialized","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","followed","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","getIsAuth","getLogin","Header","Layout","useSelector","useDispatch","justify","className","s","logo","src","Logo","alt","login_block","login_info","login_name","onClick","to","LoginReduxForm","reduxForm","handleSubmit","error","styles","login_form","onSubmit","login_input","createField","Input","remember_me","undefined","btn","summaryErrorBlock","summaryErrorBlock__message","LoginPage","login_page","loginData","CaptchaIsRequired","message","News","Music","Settings","withSuspense","Component","props","fallback","Preloader","User","unfollow","follow","user_avaBlock","avatar","small","noavatar","disabled","some","user_info","person","location","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftLimit","rightLimit","filteringPage","page","key","page_container","clNames","selected","pagination_item","getUsers","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","usersSerchFormValidate","values","UsersSearchForm","React","memo","initialValues","String","enableReinitialize","validate","setSubmitting","onFilterChanged","isSubmitting","as","Users","history","useHistory","useEffect","parsed","queryString","search","substr","actualPage","actualFilter","Number","pathname","subscribe","unsubscribe","pageNumber","UsersPage","Sider","Navbar","width","mode","style","height","Item","icon","UserOutlined","NotificationOutlined","LaptopOutlined","Content","Footer","DialogsContainer","lazy","SuspendedProfile","SuspendedDialogs","App","catchAllUnhandledErrors","event","this","initApp","addEventListener","removeEventListener","padding","minHeight","exact","path","render","component","textAlign","AppContainer","withRouter","connect","MainApplication","ReactDOM","StrictMode","document","getElementById","FormControl","meta","touched","children","hasError","textareaContainer","formControl","Textarea","input","restProps","placeholder","validators","spin"],"mappings":"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","file":"static/js/main.59f2aee2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__3Awwa\",\"pagination_item\":\"Paginator_pagination_item__1HrIY\",\"selected\":\"Paginator_selected__2ljxO\",\"paginator_btn\":\"Paginator_paginator_btn__1BZvY\",\"page_container\":\"Paginator_page_container__1VE01\"};","export type FieldValidatorType = (value: string) => string | undefined;\r\nexport const required: FieldValidatorType = (value) => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (\r\n  value\r\n) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaContainer\":\"FormControls_textareaContainer__dV2Yk\",\"formControl\":\"FormControls_formControl__IMb2A\",\"error\":\"FormControls_error__288Hc\"};","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': '369bcd44-4414-4f27-bd8d-c3b6cdf99155',\r\n  },\r\n});\r\n\r\nexport enum ResultCode {\r\n  Success = 0,\r\n  Error = 1,\r\n}\r\nexport enum ResultCodeForCaptcha {\r\n  CaptchaIsRequired = 10,\r\n}\r\n\r\nexport type ResponseType<D = {}, RC = ResultCode> = {\r\n  data: D;\r\n  messages: Array<string>;\r\n  resultCode: RC;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.b4663671.png\";","import { PhotosType, ProfileType } from '../types/types';\r\nimport { instance, ResponseType } from './api';\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: number) {\r\n    return instance\r\n      .get<ProfileType>(`profile/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance\r\n      .get<string>(`profile/status/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance\r\n      .put<ResponseType>(`profile/status`, {\r\n        status: status,\r\n      })\r\n      .then((response) => response.data);\r\n  },\r\n  saveMainAvatar(photoFile: File) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n    return instance\r\n      .put<ResponseType<PhotosType>>(`profile/photo`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then((response) => response.data);\r\n  },\r\n  saveProfile(profile: ProfileType) {\r\n    return instance\r\n      .put<ResponseType>(`profile`, profile)\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n","import { PhotosType } from './../types/types';\r\nimport { stopSubmit, FormAction } from 'redux-form';\r\nimport { profileAPI } from '../api/profileApi';\r\nimport { PostType, ProfileType } from '../types/types';\r\nimport { InferActionsType, BaseThunkType } from './redux-store';\r\nimport { ResultCode } from '../api/api';\r\n\r\ntype InitialStateType = typeof initialState;\r\nconst initialState = {\r\n  postsData: [\r\n    { id: 1, string: 'Ho-ho-ho!', likesCount: 5 },\r\n    { id: 2, string: \"Cool! What's up?\", likesCount: 7 },\r\n    { id: 3, string: 'Yo!!', likesCount: 9 },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: '',\r\n};\r\n\r\ntype ActionTypes = InferActionsType<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionTypes | FormAction>;\r\n\r\nexport const profileReducer = (\r\n  state = initialState,\r\n  action: ActionTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'ADD_POST':\r\n      return {\r\n        ...state,\r\n        postsData: [\r\n          {\r\n            id: state.postsData.length + 1,\r\n            string: action.postMessage,\r\n            likesCount: 0,\r\n          },\r\n          ...state.postsData,\r\n        ],\r\n      };\r\n\r\n    case 'SET_USER_PROFILE':\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n\r\n    case 'DELETE_POST':\r\n      return {\r\n        ...state,\r\n        postsData: state.postsData.filter((post) => post.id !== action.id),\r\n      };\r\n\r\n    case 'SAVE_PHOTO_SUCCESS':\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          photos: action.photos,\r\n        } as ProfileType,\r\n      };\r\n\r\n    case 'SET_STATUS':\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const actions = {\r\n  newPost: (postMessage: string) => {\r\n    return { type: 'ADD_POST', postMessage } as const;\r\n  },\r\n  deletePost: (id: number) => {\r\n    return { type: 'DELETE_POST', id } as const;\r\n  },\r\n  setStatus: (status: string) => {\r\n    return { type: 'SET_STATUS', status } as const;\r\n  },\r\n  setUserProfile: (profile: ProfileType) => {\r\n    return { type: 'SET_USER_PROFILE', profile } as const;\r\n  },\r\n  saveMainAvatarSuccess: (photos: PhotosType) => {\r\n    return { type: 'SAVE_PHOTO_SUCCESS', photos } as const;\r\n  },\r\n};\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (\r\n  dispatch\r\n) => {\r\n  const profile = await profileAPI.getProfile(userId);\r\n  dispatch(actions.setUserProfile(profile));\r\n};\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n  const status = await profileAPI.getStatus(userId);\r\n  dispatch(actions.setStatus(status));\r\n};\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.resultCode === ResultCode.Success) {\r\n      dispatch(actions.setStatus(status));\r\n    }\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\nexport const saveMainAvatar = (file: File): ThunkType => async (dispatch) => {\r\n  const response = await profileAPI.saveMainAvatar(file);\r\n  if (response.resultCode === ResultCode.Success) {\r\n    dispatch(actions.saveMainAvatarSuccess(response.data));\r\n  }\r\n};\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const profileData = await profileAPI.saveProfile(profile);\r\n  if (profileData.resultCode === ResultCode.Success) {\r\n    const userId = getState().auth.id;\r\n    if (userId) {\r\n      dispatch(getUserProfile(userId));\r\n    } else {\r\n      throw new Error('userid cant be null');\r\n    }\r\n  } else {\r\n    dispatch(stopSubmit('profile', { _error: profileData.messages[0] }));\r\n    return Promise.reject(profileData.messages[0]);\r\n  }\r\n};\r\n","import { InferActionsType } from './redux-store';\r\nexport type MessageType = {\r\n  id: number;\r\n  string: string;\r\n};\r\nexport type DialogType = {\r\n  id: number;\r\n  name: string;\r\n};\r\nconst initialState = {\r\n  messagesData: [\r\n    { id: 1, string: 'Hi!' },\r\n    { id: 2, string: 'How are you?!' },\r\n    { id: 3, string: 'Yo!!' },\r\n    { id: 4, string: 'LOL' },\r\n    { id: 5, string: 'KEKIS! =^_^= ' },\r\n  ] as Array<MessageType>,\r\n  dialogsData: [\r\n    { id: 1, name: 'Dymych' },\r\n    { id: 2, name: 'Alexander' },\r\n    { id: 3, name: 'Vika' },\r\n    { id: 4, name: 'Vasya' },\r\n    { id: 5, name: 'Kotik' },\r\n    { id: 6, name: 'Valeron' },\r\n  ] as Array<DialogType>,\r\n};\r\nexport type initialStateType = typeof initialState;\r\n\r\ntype AcctionsType = InferActionsType<typeof actions>;\r\n\r\nexport const dialogsReducer = (\r\n  state = initialState,\r\n  action: AcctionsType\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case 'SEND_MESSAGE':\r\n      return {\r\n        ...state,\r\n        messagesData: [\r\n          ...state.messagesData,\r\n          {\r\n            id: state.messagesData.length + 1,\r\n            string: action.textMessage,\r\n          },\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  sendMessage: (textMessage: string) => {\r\n    return { type: 'SEND_MESSAGE', textMessage } as const;\r\n  },\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/noavatar.88962eb7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Spin.522a36db.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__3CQDj\",\"users\":\"Users_users__3bhyk\",\"user\":\"Users_user__3ycHy\",\"user_info\":\"Users_user_info__10Dnn\",\"user_avaBlock\":\"Users_user_avaBlock__2F0ue\",\"location\":\"Users_location__3oAgD\",\"person\":\"Users_person__2W95M\",\"follow\":\"Users_follow__1-rdI\",\"unfollow\":\"Users_unfollow__XaQFr\",\"name\":\"Users_name__2r9-D\",\"status\":\"Users_status__8vRzG\"};","type InitialStateType = typeof initialState;\r\nconst initialState = {};\r\nexport const sidebarReducer = (\r\n  state = initialState,\r\n  action: any\r\n): InitialStateType => {\r\n  return state;\r\n};\r\n","import { UserType } from '../types/types';\r\nimport { instance, ResponseType } from './api';\r\n\r\nexport const usersAPI = {\r\n  getUsers(\r\n    currentPage: number = 1,\r\n    pageSize: number = 7,\r\n    term: string = '',\r\n    friend: null | boolean = null\r\n  ) {\r\n    return instance\r\n      .get<GetUsersType>(\r\n        `users?page=${currentPage}&count=${pageSize}&term=${term}` +\r\n          (friend === null ? '' : `&friend=${friend}`)\r\n      )\r\n      .then((response) => response.data);\r\n  },\r\n  follow(userId: number) {\r\n    return instance\r\n      .post<ResponseType>(`follow/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n  unfollow(userId: number) {\r\n    return instance\r\n      .delete<ResponseType>(`follow/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport type GetUsersType = {\r\n  items: Array<UserType>;\r\n  totalCount: number;\r\n  error: string | null;\r\n};\r\n","export const updateObjectInArray = (\r\n  items: any,\r\n  itemId: any,\r\n  objPropName: any,\r\n  newObjProp: any\r\n) => {\r\n  return items.map((user: any) => {\r\n    if (user[objPropName] === itemId) {\r\n      return {\r\n        ...user,\r\n        ...newObjProp,\r\n      };\r\n    }\r\n    return user;\r\n  });\r\n};\r\n","import { UserType } from '../types/types';\r\nimport { usersAPI } from '../api/userApi';\r\nimport { updateObjectInArray } from '../utils/objectsHelper';\r\nimport { InferActionsType, BaseThunkType } from './redux-store';\r\nimport { Dispatch } from 'redux';\r\nimport { ResponseType, ResultCode } from '../api/api';\r\n\r\ntype initialStateType = typeof initialState;\r\nexport type FilterType = typeof initialState.filter;\r\n\r\nconst initialState = {\r\n  users: [] as Array<UserType>,\r\n  totalUsersCount: null as number | null,\r\n  pageSize: 7,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>, // array of usersId\r\n  filter: {\r\n    term: '',\r\n    friend: null as null | boolean,\r\n  },\r\n};\r\ntype ActionsTypes = InferActionsType<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsTypes>;\r\n\r\nexport const usersReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case 'FOLLOW':\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case 'UNFOLLOW':\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {\r\n          followed: false,\r\n        }),\r\n      };\r\n    case 'SET_CURRENT_PAGE':\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case 'TOGGLE_IS_FETCHING':\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case 'TOGGLE_IS_FOLLOWING_PROGRESS':\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n      };\r\n    case 'SET_FILTER':\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n    case 'SET_USERS_TOTAL_COUNT':\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getUsersThunk = (\r\n  currentPage: number,\r\n  pageSize: number,\r\n  filter: FilterType\r\n): ThunkType => async (dispatch) => {\r\n  dispatch(actions.toggleIsFetching(true));\r\n  dispatch(actions.setCurrentPage(currentPage));\r\n  dispatch(actions.setFilter(filter));\r\n\r\n  const data = await usersAPI.getUsers(\r\n    currentPage,\r\n    pageSize,\r\n    filter.term,\r\n    filter.friend\r\n  );\r\n  dispatch(actions.toggleIsFetching(false));\r\n\r\n  dispatch(actions.setUsers(data.items));\r\n  dispatch(actions.setUsersTotalCount(data.totalCount));\r\n};\r\nconst followUnfollowFlow = async (\r\n  dispatch: Dispatch<ActionsTypes>,\r\n  userId: number,\r\n  apiMethod: (userId: number) => Promise<ResponseType>,\r\n  actionCreator: (userId: number) => ActionsTypes\r\n) => {\r\n  dispatch(actions.toggleIsFollowing(true, userId));\r\n  const response = await apiMethod(userId);\r\n  if (response.resultCode === ResultCode.Success) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(actions.toggleIsFollowing(false, userId));\r\n};\r\nexport const follow = (userId: number): ThunkType => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, userId, usersAPI.follow, actions.followSuccess);\r\n};\r\nexport const unfollow = (userId: number): ThunkType => async (dispatch) => {\r\n  followUnfollowFlow(\r\n    dispatch,\r\n    userId,\r\n    usersAPI.unfollow,\r\n    actions.unfollowSuccess\r\n  );\r\n};\r\n\r\nexport const actions = {\r\n  followSuccess: (userID: number) => {\r\n    return { type: 'FOLLOW', userID } as const;\r\n  },\r\n  unfollowSuccess: (userID: number) => {\r\n    return { type: 'UNFOLLOW', userID } as const;\r\n  },\r\n  setUsers: (users: Array<UserType>) => {\r\n    return { type: 'SET_USERS', users } as const;\r\n  },\r\n  setCurrentPage: (currentPage: number) => {\r\n    return { type: 'SET_CURRENT_PAGE', currentPage } as const;\r\n  },\r\n  setFilter: (filter: FilterType) => {\r\n    return { type: 'SET_FILTER', payload: { ...filter } } as const;\r\n  },\r\n  setUsersTotalCount: (totalUsersCount: number) => {\r\n    return { type: 'SET_USERS_TOTAL_COUNT', totalUsersCount } as const;\r\n  },\r\n  toggleIsFetching: (isFetching: boolean) => {\r\n    return { type: 'TOGGLE_IS_FETCHING', isFetching } as const;\r\n  },\r\n  toggleIsFollowing: (isFetching: boolean, userId: number) => {\r\n    return {\r\n      type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n      isFetching,\r\n      userId,\r\n    } as const;\r\n  },\r\n};\r\n","import {\r\n  instance,\r\n  ResponseType,\r\n  ResultCode,\r\n  ResultCodeForCaptcha,\r\n} from './api';\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance\r\n      .get<ResponseType<MeResponseDataType>>(`auth/me`)\r\n      .then((response) => response.data);\r\n  },\r\n  login(\r\n    email: string,\r\n    password: string,\r\n    rememberMe = false,\r\n    captcha: null | string = null\r\n  ) {\r\n    return instance\r\n      .post<\r\n        ResponseType<LoginResponseDataType, ResultCode | ResultCodeForCaptcha>\r\n      >(`auth/login`, {\r\n        email,\r\n        password,\r\n        rememberMe,\r\n        captcha,\r\n      })\r\n      .then((response) => response.data);\r\n  },\r\n  logout() {\r\n    return instance\r\n      .delete<ResponseType<{}>>(`auth/login`)\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n\r\ntype MeResponseDataType = {\r\n  id: number;\r\n  email: string;\r\n  login: string;\r\n};\r\ntype LoginResponseDataType = {\r\n  userId: number;\r\n};\r\n","import { instance } from './api';\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance\r\n      .get<GetCaptchaUrlType>(`security/get-captcha-url`)\r\n      .then((response) => response.data.url);\r\n  },\r\n};\r\ntype GetCaptchaUrlType = {\r\n  url: string;\r\n};\r\n","import { ResultCode, ResultCodeForCaptcha } from './../api/api';\r\nimport { authAPI } from '../api/authApi';\r\nimport { stopSubmit, FormAction } from 'redux-form';\r\nimport { InferActionsType, BaseThunkType } from './redux-store';\r\nimport { securityAPI } from '../api/securityApi';\r\n\r\ntype InitialStateType = {\r\n  id: null | number;\r\n  email: null | string;\r\n  login: null | string;\r\n  isFetching: boolean;\r\n  isAuth: boolean;\r\n  captchaURL: null | string;\r\n};\r\ntype ActionTypes = InferActionsType<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionTypes | FormAction>;\r\n\r\nconst initialState: InitialStateType = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isFetching: false,\r\n  isAuth: false,\r\n  captchaURL: null,\r\n};\r\nexport const authReducer = (\r\n  state = initialState,\r\n  action: ActionTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET_USER_DATA':\r\n    case 'SET_CAPTCHA':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst actions = {\r\n  setAuthUserData: (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n  ) => {\r\n    return {\r\n      type: 'SET_USER_DATA',\r\n      payload: { id, email, login, isAuth },\r\n    } as const;\r\n  },\r\n  setCaptcha: (captchaURL: string | null) => {\r\n    return { type: 'SET_CAPTCHA', payload: { captchaURL } } as const;\r\n  },\r\n};\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n  const meData = await authAPI.me();\r\n  if (meData.resultCode === ResultCode.Success) {\r\n    let { id, email, login } = meData.data;\r\n    dispatch(actions.setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\nexport const login = (\r\n  email: string,\r\n  password: string,\r\n  rememberMe: boolean,\r\n  captcha: string\r\n): ThunkType => async (dispatch) => {\r\n  const loginData = await authAPI.login(email, password, rememberMe, captcha);\r\n  if (loginData.resultCode === ResultCode.Success) {\r\n    dispatch(getAuthUserData());\r\n    dispatch(actions.setCaptcha(null));\r\n  } else {\r\n    if (loginData.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n    const message =\r\n      loginData.messages.length > 0 ? loginData.messages[0] : 'some error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n};\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n  const captchaURL = await securityAPI.getCaptchaUrl();\r\n  dispatch(actions.setCaptcha(captchaURL));\r\n};\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n  const logoutData = await authAPI.logout();\r\n  if (logoutData.resultCode === ResultCode.Success) {\r\n    dispatch(actions.setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n","import { getAuthUserData } from './authReducer';\r\nimport { InferActionsType, BaseThunkType } from './redux-store';\r\n\r\nexport type InitialStateType = {\r\n  initialized: boolean;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  initialized: false,\r\n};\r\n\r\ntype ActionsType = InferActionsType<typeof actions>;\r\n\r\nexport const appReducer = (\r\n  state = initialState,\r\n  action: ActionsType\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'INITIALIZED_SUCCESS':\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst actions = {\r\n  initializedSuccess: () => {\r\n    return { type: 'INITIALIZED_SUCCESS' } as const;\r\n  },\r\n};\r\n\r\ntype ThunkType = BaseThunkType<ActionsType, void>;\r\n\r\nexport const initApp = (): ThunkType => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  promise.then(() => {\r\n    dispatch(actions.initializedSuccess());\r\n  });\r\n};\r\n","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n  Action,\r\n} from 'redux';\r\nimport { profileReducer } from './profileReducer';\r\nimport { dialogsReducer } from './dialogsReducer';\r\nimport { sidebarReducer } from './sidebarReducer';\r\nimport { usersReducer } from './usersReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { appReducer } from './appReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\n\r\ntype RootReducerType = typeof rootReducer;\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport type InferActionsType<T> = T extends {\r\n  [key: string]: (...args: any[]) => infer U;\r\n}\r\n  ? U\r\n  : never;\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\r\n  R,\r\n  AppStateType,\r\n  unknown,\r\n  A\r\n>;\r\n\r\nconst rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  form: formReducer,\r\n});\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n","import { AppStateType } from './redux-store';\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n  return state.auth.isAuth;\r\n};\r\nexport const getLogin = (state: AppStateType) => {\r\n  return state.auth.login;\r\n};\r\nexport const getEmail = (state: AppStateType) => {\r\n  return state.auth.email;\r\n};\r\n","import React from \"react\";\r\nimport Logo from \"./logo.png\";\r\nimport s from \"./Header.module.css\";\r\nimport \"../../assets/styles/buttons.css\";\r\nimport \"../../assets/styles/buttons.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getIsAuth, getLogin } from \"../../redux/authSelectors\";\r\nimport { logout } from \"../../redux/authReducer\";\r\nimport { Button, Layout, Col, Row } from \"antd\";\r\n\r\ntype PropsType = {}\r\nexport const Header: React.FC<PropsType> = () => {\r\n  const { Header } = Layout;\r\n  const isAuth = useSelector(getIsAuth);\r\n  const login = useSelector(getLogin);\r\n  const dispatch = useDispatch();\r\n  const logoutCallback = () => {\r\n    dispatch(logout());\r\n  }\r\n  return (\r\n    <Header>\r\n      <Row justify=\"space-between\">\r\n        {isAuth ? (\r\n          <>\r\n            <Col>\r\n              <img className={s.logo} src={Logo} alt=\"logo\" />\r\n            </Col>\r\n            <Col>\r\n              <div className={s.login_block}>\r\n                <div className={s.login_info}>\r\n                  <span className={s.login_name}>{`Login: ${login}`}</span>\r\n                </div>\r\n                <Button type='primary' onClick={logoutCallback}>\r\n                  Logout\r\n            </Button>\r\n              </div>\r\n            </Col>\r\n          </>\r\n        ) : (\r\n            <>\r\n              <Col>\r\n                <img className={s.logo} src={Logo} alt=\"logo\" />\r\n              </Col>\r\n              <Col>\r\n                <NavLink className={s.login} to=\"/login\">\r\n                  <Button type='primary'>Login</Button>\r\n                </NavLink>\r\n              </Col>\r\n            </>\r\n          )}\r\n      </Row>\r\n    </Header >\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport '../../assets/styles/buttons.css';\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { Input, createField, GetStringKeys } from \"../common/FormControls/FormControls\";\r\nimport { required } from \"../../utils/validators\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { Button } from \"antd\";\r\n\r\ntype LoginFormOwnPropsType = {\r\n  captchaURL: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormDataType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({ handleSubmit, error, captchaURL }) => {\r\n  return (\r\n    <form className={styles.login_form} onSubmit={handleSubmit}>\r\n      <div className={styles.login_input}>\r\n        {createField<LoginFormDataTypeKeys>('Email', 'email', [required], Input, { type: 'text' })}\r\n      </div>\r\n      <div className={styles.login_input}>\r\n        {createField<LoginFormDataTypeKeys>('Password', 'password', [required], Input, { type: 'password' })}\r\n      </div>\r\n      <div className={styles.remember_me}>\r\n        <span>Remember me</span>\r\n        {createField<LoginFormDataTypeKeys>(undefined, 'rememberMe', [], Input, { type: 'checkbox' })}\r\n      </div>\r\n      {captchaURL && <img className={styles.captcha} src={captchaURL} alt='captcha' />}\r\n      {captchaURL && createField<LoginFormDataTypeKeys>('Symbols from captcha', 'captcha', [required], Input, { type: 'text' })}\r\n      <div className={styles.btn}>\r\n        <Button type=\"primary\" onClick={handleSubmit}>Sign In</Button>\r\n      </div>\r\n      {\r\n        error && <div className={styles.summaryErrorBlock}>\r\n          <span className={styles.summaryErrorBlock__message}>{error}</span>\r\n        </div>\r\n      }\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormDataType, LoginFormOwnPropsType>({ form: \"login\" })(LoginForm);\r\n\r\nexport const LoginPage: React.FC = () => {\r\n  const captchaURL = useSelector((state: AppStateType) => state.auth.captchaURL);\r\n  const isAuth = useSelector((state: AppStateType) => state.auth.isAuth);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (formData: LoginFormDataType) => {\r\n    dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha));\r\n  };\r\n  if (isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n  return (\r\n    <div className={styles.login_page}>\r\n      <p className={styles.login}>Login Form</p>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaURL={captchaURL} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport type LoginFormDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n  captcha: string\r\n}\r\ntype LoginFormDataTypeKeys = GetStringKeys<LoginFormDataType>\r\n\r\n","import React from 'react';\r\n// import s from './News.module.css';\r\nexport const News: React.FC = () => {\r\n  return (\r\n    <h2>\r\n      News\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n// import s from './Music.module.css';\r\n\r\nexport const Music: React.FC = () => {\r\n  return (\r\n    <h2>\r\n      Music\r\n    </h2>\r\n  )\r\n}","import React from 'react';\r\n// import s from './Settings.module.css';\r\n\r\nexport const Settings: React.FC = () => {\r\n  return (\r\n    <h2>\r\n      Settings\r\n    </h2>\r\n  )\r\n}","import React, { Suspense } from 'react';\r\nimport { Preloader } from '../components/common/Preloader/Preloader';\r\n\r\nexport function withSuspense<ComponentProps>(Component: React.ComponentType<ComponentProps>) {\r\n  return (props: ComponentProps) => {\r\n    return (\r\n      <Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n      </Suspense>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Users.module.css';\r\nimport '../../assets/styles/buttons.css';\r\nimport noavatar from '../../assets/image/noavatar.jpg';\r\nimport { UserType } from '../../types/types';\r\ntype PropsType = {\r\n  user: UserType\r\n  unfollow: (userId: number) => void\r\n  follow: (userId: number) => void\r\n  followingInProgress: Array<number>\r\n}\r\nconst User: React.FC<PropsType> = ({ user, unfollow, follow, followingInProgress }) => {\r\n  return (\r\n    <div className={styles.user}>\r\n      <span className={styles.user_avaBlock}>\r\n        <div>\r\n          <NavLink to={`/profile/${user.id}`}>\r\n            <img\r\n              className={styles.avatar}\r\n              src={user && user.photos && user.photos.small !== null ? user.photos.small : noavatar}\r\n              alt='avatar' />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {\r\n            user.followed\r\n              ? <button\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                className={`${styles.unfollow} btn`}\r\n                onClick={() => {\r\n                  unfollow(user.id);\r\n                }}>UnFollow</button>\r\n              : <button\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                className={`${styles.follow} btn`}\r\n                onClick={() => {\r\n                  follow(user.id);\r\n                }}>Follow</button>\r\n          }\r\n        </div>\r\n      </span>\r\n      <span className={styles.user_info}>\r\n        <span className={styles.person}>\r\n          <div className={styles.name}>{user.name}</div>\r\n          <div className={styles.status}>{user.status}</div>\r\n        </span>\r\n        <span className={styles.location}>\r\n          <div>{'Default_City'}</div>\r\n          <>{'Default_Country'}</>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\nexport default User;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport '../../../assets/styles/buttons.css';\r\nimport clNames from 'classnames';\r\nimport { Button } from 'antd';\r\n\r\ntype PaginatorPropsType = {\r\n  totalItemsCount: number | null\r\n  pageSize: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  currentPage: number\r\n  portionSize?: number\r\n}\r\n\r\nconst Paginator: React.FC<PaginatorPropsType> = ({ totalItemsCount, pageSize, onPageChanged, currentPage, portionSize = 7 }) => {\r\n\r\n  const pagesCount = Math.ceil(totalItemsCount as number / pageSize);\r\n  const pages: Array<number> = [];\r\n  for (let i = 1; i < pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  const portionCount = Math.ceil(pagesCount / portionSize);\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  const leftLimit = (portionNumber - 1) * portionSize + 1;\r\n  const rightLimit = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.pages}>\r\n      {\r\n        portionNumber > 1 &&\r\n        <Button\r\n          onClick={() => { setPortionNumber(portionNumber - 1) }}\r\n        >prev</Button>\r\n      }\r\n      {\r\n        pages.filter(filteringPage => filteringPage >= leftLimit && filteringPage <= rightLimit)\r\n          .map(page => {\r\n            return (\r\n              <div key={page} className={styles.page_container}>\r\n                <p\r\n                  className={clNames({ [styles.selected]: currentPage === page }, styles.pagination_item)}\r\n                  onClick={() => { onPageChanged(page) }}\r\n                >\r\n                  {page}\r\n                </p>\r\n              </div>)\r\n          })\r\n      }\r\n      {\r\n        portionCount > portionNumber &&\r\n        <Button\r\n          onClick={() => { setPortionNumber(portionNumber + 1) }}\r\n        >next</Button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginator;","import { createSelector } from 'reselect';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst Users = (state: AppStateType) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(Users, (users) => {\r\n  // dependency from results of Users -> users\r\n  return users.filter((u) => true);\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n  return state.usersPage.filter;\r\n};\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { FilterType } from '../../../redux/usersReducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsersFilter } from '../../../redux/usersSelectors';\r\n\r\nconst usersSerchFormValidate = (values: any) => {\r\n  const errors = {};\r\n  return errors;\r\n}\r\ntype PropsType = {\r\n  onFilterChanged: (filter: FilterType) => void\r\n}\r\ntype FriendFormType = 'true' | 'false' | 'null';\r\ntype FormType = {\r\n  term: string\r\n  friend: FriendFormType\r\n}\r\n\r\nconst UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n  const filter = useSelector(getUsersFilter);\r\n  const submit = (values: FormType, { setSubmitting }:\r\n    { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n    const filter: FilterType = {\r\n      term: values.term,\r\n      friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n    }\r\n    props.onFilterChanged(filter);\r\n    setSubmitting(false)\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType }}\r\n      enableReinitialize\r\n      validate={usersSerchFormValidate}\r\n      onSubmit={submit}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Field type=\"text\" name=\"term\" />\r\n          <Field name='friend' as='select'>\r\n            <option value='null'>All</option>\r\n            <option value='true'>Only Followed</option>\r\n            <option value='false'>Only Unfollowed</option>\r\n          </Field>\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Find\r\n           </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n});\r\nexport default UsersSearchForm;","import React, { useEffect } from 'react';\r\nimport User from './User';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport styles from './Users.module.css';\r\nimport '../../assets/styles/buttons.css';\r\nimport UsersSearchForm from './UsersSearchForm/UsersSearchForm';\r\nimport { FilterType, follow, getUsersThunk, unfollow } from '../../redux/usersReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentPage, getFollowingInProgress, getPageSize, getTotalUsersCount, getUsers, getUsersFilter } from '../../redux/usersSelectors';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as queryString from 'querystring';\r\n\r\ntype UsersPropsType = {}\r\n\r\nexport const Users: React.FC<UsersPropsType> = () => {\r\n  const users = useSelector(getUsers);\r\n  const totalUsersCount = useSelector(getTotalUsersCount);\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const pageSize = useSelector(getPageSize);\r\n  const filter = useSelector(getUsersFilter);\r\n  const followingInProgress = useSelector(getFollowingInProgress);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const parsed = queryString.parse(history.location.search.substr(1)) as { term: string; page: string; friend: string; };\r\n    let actualPage = currentPage;\r\n    let actualFilter = filter;\r\n    if (parsed.page) {\r\n      actualPage = Number(parsed.page);\r\n    }\r\n    if (parsed.term) {\r\n      actualFilter = { ...actualFilter, term: parsed.term as string };\r\n    }\r\n    if (parsed.friend) {\r\n      actualFilter = { ...actualFilter, friend: parsed.friend === 'null' ? null : parsed.friend === 'true' ? true : false };\r\n    }\r\n    debugger\r\n    dispatch(getUsersThunk(actualPage, pageSize, actualFilter));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    debugger\r\n    history.push({\r\n      pathname: '/users',\r\n      search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n    })\r\n  }, [filter, currentPage]);\r\n\r\n  const onPageChanged = (pageNumber: number) => {\r\n    dispatch(getUsersThunk(pageNumber, pageSize, filter));\r\n  }\r\n\r\n  const onFilterChanged = (filter: FilterType) => {\r\n    dispatch(getUsersThunk(1, pageSize, filter));\r\n  }\r\n\r\n  const subscribe = (userId: number) => {\r\n    dispatch(follow(userId));\r\n  }\r\n\r\n  const unsubscribe = (userId: number) => {\r\n    dispatch(unfollow(userId));\r\n  }\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      <div>\r\n        <UsersSearchForm onFilterChanged={onFilterChanged} />\r\n      </div>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n      {\r\n        users.map((user) => {\r\n          return <User\r\n            key={user.id}\r\n            user={user}\r\n            follow={subscribe}\r\n            unfollow={unsubscribe}\r\n            followingInProgress={followingInProgress} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Users } from './Users';\r\nimport { getIsFetching } from '../../redux/usersSelectors';\r\nimport { Preloader } from '../common/Preloader/Preloader';\r\n\r\n\r\ntype UserPagePropsType = {}\r\n\r\nexport const UsersPage: React.FC<UserPagePropsType> = (props) => {\r\n  const isFetching = useSelector(getIsFetching);\r\n  return (\r\n    <>\r\n      { isFetching ? <Preloader /> : null}\r\n      <Users />\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const Navbar: React.FC = () => {\r\n  return (\r\n    <Sider className=\"site-layout-background\" width={200}>\r\n      <Menu\r\n        mode=\"inline\"\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Menu.Item key=\"1\" icon={<UserOutlined />}><Link to=\"/profile\">My Profile</Link></Menu.Item>\r\n        <Menu.Item key=\"2\" icon={<NotificationOutlined />}><Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n        <Menu.Item key=\"3\" icon={<LaptopOutlined />}><Link to=\"/users\">Users</Link></Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  )\r\n}","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Provider, connect } from 'react-redux';\r\nimport { AppStateType, store } from './redux/redux-store';\r\nimport { Preloader } from './components/common/Preloader/Preloader';\r\nimport { Header } from './components/Header/Header';\r\nimport { BrowserRouter, Link, Route, Switch, withRouter } from 'react-router-dom';\r\nimport { Redirect } from 'react-router'\r\nimport { LoginPage } from './components/LoginPage/LoginPage';\r\nimport { News } from './components/News/News';\r\nimport { Music } from './components/Music/Music';\r\nimport { Settings } from './components/Settings/Settings';\r\nimport { compose } from 'redux';\r\nimport { initApp } from './redux/appReducer';\r\nimport { withSuspense } from './hoc/withSuspense';\r\nimport { UsersPage } from './components/Users/UsersPage';\r\n\r\nimport { Layout } from 'antd';\r\nimport { Navbar } from './components/Navbar/Navbar';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nconst SuspendedProfile = withSuspense(ProfileContainer);\r\nconst SuspendedDialogs = withSuspense(DialogsContainer);\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>;\r\ntype DispatchPropsType = {\r\n  initApp: () => void\r\n}\r\n\r\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\r\n  catchAllUnhandledErrors = (event: PromiseRejectionEvent) => {\r\n    alert('Some Error in App (unhandledrejection).');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initApp();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <Layout>\r\n        <Header />\r\n        <Content style={{ padding: '0 50px' }}>\r\n          <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\r\n            <Navbar />\r\n            <Content style={{ padding: '0 50px', minHeight: 280 }}>\r\n              <Switch>\r\n                <Route exact path='/' render={() => <Redirect to='/login' />} />\r\n                <Route path='/dialogs' render={() => <SuspendedDialogs />} />\r\n                <Route path='/profile/:userId?' render={() => <SuspendedProfile />} />\r\n                <Route path='/users' render={() => <UsersPage />} />\r\n                <Route path='/login' render={() => <LoginPage />} />\r\n                <Route path='/news' component={News} />\r\n                <Route path='/music' component={Music} />\r\n                <Route path='/settings' component={Settings} />\r\n                <Route path='*' render={() => <div>404 not found</div>} />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>2020 Created by Vladislav Shevel</Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    initialized: state.app.initialized,\r\n  }\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(\r\n  withRouter,\r\n  connect(mapStateToProps, { initApp }))(App);\r\n\r\nconst MainApplication: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store} >\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default MainApplication;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApplication from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainApplication />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_form\":\"Login_login_form__x-bJ6\",\"summaryErrorBlock\":\"Login_summaryErrorBlock__7PciY\",\"summaryErrorBlock__message\":\"Login_summaryErrorBlock__message__3NDEv\",\"remember_me\":\"Login_remember_me__Lu6m-\",\"login\":\"Login_login__2zIkb\",\"login_page\":\"Login_login_page__2K_qZ\",\"captcha\":\"Login_captcha__1ZgzW\"};","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\r\nimport { FieldValidatorType } from '../../../utils/validators';\r\n\r\ntype FormControlsPropsType = {\r\n  meta: WrappedFieldMetaProps\r\n};\r\n\r\nconst FormControl: React.FC<FormControlsPropsType> = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={`${styles.textareaContainer} ${styles.formControl} ${hasError ? styles.error : ''}`}\r\n    >\r\n      {children}\r\n      <div>{hasError && <span>{error}</span>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport function createField<FormKeysType extends string>(\r\n  placeholder: string | undefined,\r\n  name: FormKeysType,\r\n  validators: Array<FieldValidatorType>,\r\n  component: React.FC<WrappedFieldProps>,\r\n  { ...props }\r\n) {\r\n  return (\r\n    <Field\r\n      name={name}\r\n      placeholder={placeholder}\r\n      component={component}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  )\r\n};\r\nexport type GetStringKeys<T> = Extract<keyof T, string>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2MBE8\",\"logo\":\"Header_logo__2lXxh\",\"login\":\"Header_login__2W02F\",\"login_block\":\"Header_login_block__2_HEk\",\"login_info\":\"Header_login_info__eDcXh\",\"login_name\":\"Header_login_name__2p3YY\",\"login_email\":\"Header_login_email__1RcLB\"};","import React from 'react';\r\nimport spin from '../../../assets/icon/Spin.svg';\r\nimport './spin.css';\r\n\r\nexport const Preloader: React.FC = () => {\r\n  return <img className='spin' src={spin} alt='spin-loader' />\r\n}"],"sourceRoot":""}
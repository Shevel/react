{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/icon/add.png","assets/icon/edit.svg","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileStatus/ProfileStatusHooks.js","components/Profile/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","styles","post","src","alt","message","likesCount","maxLengthFiled300","maxLengthCreator","MyPosts","React","memo","postElements","postsData","map","key","length","id","string","posts","header","onSubmit","postData","addPost","newPost","PostForm","handleSubmit","newMessageForm","Field","name","component","Textarea","type","placeholder","validate","reduxForm","form","MyPostsContainer","connect","state","profilePage","dispatch","postMessage","actions","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","isOwner","autoFocus","value","onChange","event","currentTarget","onBlur","updateStatus","ProfileDataForm","profile","error","createField","Input","Object","keys","contacts","ProfileInfo","saveMainAvatar","saveProfile","s","ava_block","ava_image","avatar","photos","large","small","defaultAvatar","ava_uploader","upload_ava","e","target","files","ava_label","title","htmlFor","addIcon","height","info","full_name","fullName","formData","then","initialValues","activateEditMode","Preloader","ProfileData","profile_data","activate_edit_btn","width","editIcon","about_me","aboutMe","lookingForAJobDescription","readOnly","checked","lookingForAJob","contactTitle","contactValue","Contact","contact","contact_title","contact_value","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.e0068b18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Profile_img__3EK6p\",\"descriptionBlock\":\"Profile_descriptionBlock__9OwsV\",\"profile\":\"Profile_profile__15vWC\",\"avatar\":\"Profile_avatar__3MgzR\",\"info\":\"Profile_info__2nWzm\",\"full_name\":\"Profile_full_name__SJgvK\",\"about_me\":\"Profile_about_me__r-Ivn\",\"status\":\"Profile_status__2IMFW\",\"ava_block\":\"Profile_ava_block__6x96c\",\"upload_ava\":\"Profile_upload_ava__2aVps\",\"ava_uploader\":\"Profile_ava_uploader__20wJv\",\"ava_label\":\"Profile_ava_label__G3ixd\",\"contact_title\":\"Profile_contact_title__2x6DQ\",\"contact_value\":\"Profile_contact_value__26e0_\",\"ava_image\":\"Profile_ava_image__1b_Kc\",\"profile_data\":\"Profile_profile_data__CWIB-\",\"activate_edit_btn\":\"Profile_activate_edit_btn__1a1_p\",\"contact\":\"Profile_contact__3NFcS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1vJq3\",\"newMessageForm\":\"MyPosts_newMessageForm__XA5x9\",\"header\":\"MyPosts_header__1KgIO\",\"btn\":\"MyPosts_btn__1f10X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2tBK-\"};","module.exports = __webpack_public_path__ + \"static/media/add.4cf308a4.png\";","module.exports = __webpack_public_path__ + \"static/media/edit.70454fa7.svg\";","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <img src='https://avatars.mds.yandex.net/get-pdb/1352825/a5f8fbd7-515e-49f8-81d6-be55a2daac92/s600' alt='post' />\r\n      {props.message}\r\n      <br />\r\n      <span>Like {props.likesCount}</span>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport '../../../assets/styles/buttons.css';\r\nimport { Post } from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator } from \"../../../utils/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLengthFiled300 = maxLengthCreator(300);\r\n\r\nexport const MyPosts = React.memo(props => {\r\n  const postElements = props.postsData.map((post) => (\r\n    <Post\r\n      key={props.postsData.length - post.id}\r\n      message={post.string}\r\n      likesCount={post.likesCount}\r\n    />\r\n  ));\r\n\r\n  const onSubmitPost = (postData) => {\r\n    props.addPost(postData.newPost);\r\n  };\r\n\r\n  return (\r\n\r\n    <div className={styles.posts}>\r\n      <h3 className={styles.header}>My Posts</h3>\r\n      <PostForm onSubmit={onSubmitPost} />\r\n      {postElements}\r\n    </div>\r\n  );\r\n});\r\n\r\nlet PostForm = (props) => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form className={styles.newMessageForm} onSubmit={handleSubmit}>\r\n      <Field\r\n        name=\"newPost\"\r\n        component={Textarea}\r\n        type=\"text\"\r\n        placeholder=\"Enter new post text..\"\r\n        validate={[maxLengthFiled300]}\r\n      />\r\n      <button className='btn'>Add post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nPostForm = reduxForm({ form: \"posts\" })(PostForm);\r\n","import { MyPosts } from \"./MyPosts\";\r\nimport { actions } from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (postMessage) => {\r\n      dispatch(actions.newPost(postMessage));\r\n    },\r\n  };\r\n};\r\n\r\nexport const MyPostsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyPosts);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../Profile.module.css\";\r\n\r\nexport const ProfileStatusHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    props.isOwner && setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <span className={styles.status} onClick={activateEditMode}>\r\n            {props.status || \"Set status..\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus\r\n            value={status}\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport '../../../assets/styles/buttons.css';\r\n\r\nlet ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div ><b>Full Name:</b>{createField('Full Name', 'fullName', [], Input)}</div>\r\n      <div ><b>Looking for a job:</b>{createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}</div>\r\n      <div ><b>My skills:</b>{createField('My skills', 'lookingForAJobDescription', [], Textarea)}</div>\r\n      <div ><b>About me:</b>{createField('About me', 'aboutMe', [], Textarea)}</div>\r\n      {error && <div>\r\n        <span>{error}</span>\r\n      </div>}\r\n      {\r\n        Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <div key={key}>\r\n              <b>{key}</b>{createField(key, 'contacts.' + key, [], Input)}\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      <div><button className='btn'>Save</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProfileDataForm = reduxForm({ form: \"profile\" })(ProfileDataForm);","import React, { useState } from \"react\";\r\nimport defaultAvatar from \"../../../assets/image/noavatar.jpg\";\r\nimport s from \"../Profile.module.css\";\r\nimport \"../../../assets/styles/buttons.css\";\r\nimport { Preloader } from \"../../common/Preloader/Preloader\";\r\nimport { ProfileStatusHooks } from \"../ProfileStatus/ProfileStatusHooks\";\r\nimport ProfileDataForm from \"../ProfileDataForm/ProfileDataForm\";\r\nimport addIcon from \"../../../assets/icon/add.png\";\r\nimport editIcon from \"../../../assets/icon/edit.svg\";\r\n\r\nexport const ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  saveMainAvatar,\r\n  saveProfile,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onAvaSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      saveMainAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className={s.profile}>\r\n        <div className={s.ava_block}>\r\n          <div className={s.ava_image}>\r\n            <img\r\n              className={s.avatar}\r\n              src={\r\n                profile.photos.large || profile.photos.small || defaultAvatar\r\n              }\r\n              alt=\"ava\"\r\n            />\r\n            {isOwner && (\r\n              <div className={s.ava_uploader}>\r\n                <input\r\n                  className={s.upload_ava}\r\n                  onChange={onAvaSelected}\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                />\r\n                <label\r\n                  className={s.ava_label}\r\n                  title=\"Change and upload avatar\"\r\n                  htmlFor=\"file\"\r\n                >\r\n                  Change avatar <img src={addIcon} alt=\"addIcon\" height=\"20\" />\r\n                </label>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={s.info}>\r\n          <div className={s.full_name}>{profile.fullName}</div>\r\n          <ProfileStatusHooks\r\n            status={status}\r\n            updateStatus={updateStatus}\r\n            isOwner={isOwner}\r\n          />\r\n          {editMode ? (\r\n            <ProfileDataForm\r\n              onSubmit={onSubmit}\r\n              initialValues={profile}\r\n              profile={profile}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              activateEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, activateEditMode }) => {\r\n  return (\r\n    <div className={s.profile_data}>\r\n      {isOwner && (\r\n        <button\r\n          className={`${s.activate_edit_btn} btn`}\r\n          onClick={activateEditMode}\r\n        >\r\n          <img width={20} src={editIcon} alt=\"editIcon\" />\r\n        </button>\r\n      )}\r\n      <div className={s.about_me}>\r\n        <b>About me:</b>\r\n        {` ${profile.aboutMe}`}\r\n      </div>\r\n      <div className={s.about_me}>\r\n        <b>My skills:</b>\r\n        {` ${profile.lookingForAJobDescription}`}\r\n      </div>\r\n      <label className={s.about_me} htmlFor=\"lookingForaJob\">\r\n        <b>Looking for a Job</b>\r\n      </label>\r\n      <input\r\n        id=\"lookingForaJob\"\r\n        type=\"checkbox\"\r\n        readOnly\r\n        checked={profile.lookingForAJob}\r\n      />\r\n      {Object.keys(profile.contacts).map((key) => {\r\n        return (\r\n          <Contact\r\n            key={key}\r\n            contactTitle={key}\r\n            contactValue={profile.contacts[key]}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <div className={s.contact_title}>{`My ${contactTitle}:`}</div>\r\n      <div className={s.contact_value}>{` ${contactValue || \"\"}`}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MyPostsContainer } from \"./MyPosts/MyPostsContainer\";\r\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\r\n\r\nexport const Profile = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  saveMainAvatar,\r\n  saveProfile\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        saveMainAvatar={saveMainAvatar}\r\n        saveProfile={saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Profile } from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  saveMainAvatar,\r\n  saveProfile\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        saveMainAvatar={this.props.saveMainAvatar}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorizedUserId: state.auth.id,\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    saveMainAvatar,\r\n    saveProfile,\r\n  }),\r\n  withRouter, // connecting to url parameter\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}
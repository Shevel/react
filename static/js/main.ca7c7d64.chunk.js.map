{"version":3,"sources":["api/api.ts","api/profileApi.ts","redux/profileReducer.ts","redux/dialogsReducer.ts","assets/image/noavatar.jpg","assets/icon/Spin.svg","components/Header/logo.png","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Login/Login.module.css","components/common/FormControls/FormControls.tsx","redux/sidebarReducer.ts","api/userApi.ts","utils/objectsHelper.js","redux/usersReducer.ts","api/authApi.ts","api/securityApi.ts","redux/authReducer.ts","redux/appReducer.ts","redux/redux-store.ts","components/Users/User.js","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.js","components/Header/HeaderContainer.js","components/Navbar/Navbar.js","components/Login/Login.tsx","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","hoc/withSuspense.js","App.js","index.js","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","components/common/Preloader/Preloader.tsx","utils/validators.ts","components/common/FormControls/FormControls.module.css","hoc/withAuthRedirect.js"],"names":["ResultCode","ResultCodeForCaptcha","instance","axios","create","withCredentials","baseURL","headers","profileAPI","userId","get","then","response","data","status","put","photoFile","formData","FormData","append","profile","initialState","postsData","id","string","likesCount","profileReducer","state","action","type","length","postMessage","filter","post","photos","actions","newPost","deletePost","setStatus","setUserProfile","saveMainAvatarSuccess","getUserProfile","dispatch","a","getStatus","updateStatus","resultCode","Success","alert","saveMainAvatar","file","saveProfile","getState","profileData","auth","stopSubmit","_error","messages","Promise","reject","messagesData","dialogsData","name","dialogsReducer","textMessage","sendMessageActionCreator","module","exports","FormControl","meta","touched","error","children","hasError","className","styles","textareaContainer","formControl","Textarea","props","input","restProps","Input","createField","placeholder","validators","component","validate","usersAPI","currentPage","pageSize","delete","updateObjectInArray","items","itemId","objPropName","newObjProp","map","user","users","totalUsersCount","isFetching","followingInProgress","followUnfollowFlow","apiMethod","actionCreator","toggleIsFollowing","followSuccess","userID","unfollowSuccess","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","authAPI","email","password","rememberMe","captcha","securityAPI","url","login","isAuth","captchaURL","payload","getAuthUserData","meData","getCaptchaUrl","initialized","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","followed","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","User","unfollow","follow","user_avaBlock","to","avatar","src","small","noavatar","alt","disabled","some","onClick","user_info","person","location","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftLimit","rightLimit","clNames","paginator_btn","filteringPage","page","page_container","key","selected","pagination_item","Users","getUsers","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","getUsersThunk","this","Preloader","React","Component","connect","totalCount","withAuthRedirect","Header","s","header","logo","Logo","login_block","login_info","login_name","login_email","logout","HeaderContainer","Navbar","nav","item","activeClassName","active","LoginReduxForm","reduxForm","handleSubmit","login_form","onSubmit","login_input","required","remember_me","undefined","btn","summaryErrorBlock","summaryErrorBlock__message","loginData","CaptchaIsRequired","message","login_page","News","Music","Settings","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","event","preventDefault","reason","detail","console","log","initApp","addEventListener","removeEventListener","exact","path","render","title","AppContainer","MainApplication","ReactDOM","StrictMode","document","getElementById","spin","value","maxLengthCreator","maxLength","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.ca7c7d64.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': '7f9a3742-7516-4838-bf63-24f67efb7b5e',\r\n  },\r\n});\r\n\r\nexport enum ResultCode {\r\n  Success = 0,\r\n  Error = 1,\r\n}\r\nexport enum ResultCodeForCaptcha {\r\n  CaptchaIsRequired = 10,\r\n}\r\n","import { PhotosType, ProfileType } from '../types/types';\r\nimport { instance, ResultCode } from './api';\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: number) {\r\n    return instance\r\n      .get<ProfileType>(`profile/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance\r\n      .get<string>(`profile/status/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance\r\n      .put<UpdateStatusOrProfileType>(`profile/status`, { status: status })\r\n      .then((response) => response.data);\r\n  },\r\n  saveMainAvatar(photoFile: any) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n    return instance\r\n      .put<SaveMainAvatarType>(`profile/photo`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then((response) => response.data);\r\n  },\r\n  saveProfile(profile: ProfileType) {\r\n    return instance\r\n      .put<UpdateStatusOrProfileType>(`profile`, profile)\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport type UpdateStatusOrProfileType = {\r\n  data: {};\r\n  resultCode: ResultCode;\r\n  messages: Array<string>;\r\n  fieldsErrors: Array<string>;\r\n};\r\nexport type SaveMainAvatarType = {\r\n  data: PhotosType;\r\n  resultCode: number;\r\n  messages: Array<string>;\r\n};\r\n","import { PhotosType } from './../types/types';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { profileAPI } from '../api/profileApi';\r\nimport { PostType, ProfileType } from '../types/types';\r\nimport { AppStateType, InferActionsType } from './redux-store';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { ResultCode } from '../api/api';\r\n\r\ntype InitialStateType = typeof initialState;\r\nconst initialState = {\r\n  postsData: [\r\n    { id: 1, string: 'Ho-ho-ho!', likesCount: 5 },\r\n    { id: 2, string: \"Cool! What's up?\", likesCount: 7 },\r\n    { id: 3, string: 'Yo!!', likesCount: 9 },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: '',\r\n};\r\n\r\ntype ActionTypes = InferActionsType<typeof actions>;\r\n\r\nexport const profileReducer = (\r\n  state = initialState,\r\n  action: ActionTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'ADD_POST':\r\n      return {\r\n        ...state,\r\n        postsData: [\r\n          {\r\n            id: state.postsData.length + 1,\r\n            string: action.postMessage,\r\n            likesCount: 0,\r\n          },\r\n          ...state.postsData,\r\n        ],\r\n      };\r\n\r\n    case 'SET_USER_PROFILE':\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n\r\n    case 'DELETE_POST':\r\n      return {\r\n        ...state,\r\n        postsData: state.postsData.filter((post) => post.id !== action.id),\r\n      };\r\n\r\n    case 'SAVE_PHOTO_SUCCESS':\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          photos: action.photos,\r\n        } as ProfileType,\r\n      };\r\n\r\n    case 'SET_STATUS':\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const actions = {\r\n  newPost: (postMessage: string) => {\r\n    return { type: 'ADD_POST', postMessage } as const;\r\n  },\r\n  deletePost: (id: number) => {\r\n    return { type: 'DELETE_POST', id } as const;\r\n  },\r\n  setStatus: (status: string) => {\r\n    return { type: 'SET_STATUS', status } as const;\r\n  },\r\n  setUserProfile: (profile: ProfileType) => {\r\n    return { type: 'SET_USER_PROFILE', profile } as const;\r\n  },\r\n  saveMainAvatarSuccess: (photos: PhotosType) => {\r\n    return { type: 'SAVE_PHOTO_SUCCESS', photos } as const;\r\n  },\r\n};\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>;\r\nexport const getUserProfile = (userId: number | null): ThunkType => async (\r\n  dispatch\r\n) => {\r\n  const profile = await profileAPI.getProfile(userId as number);\r\n  dispatch(actions.setUserProfile(profile));\r\n};\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n  const status = await profileAPI.getStatus(userId);\r\n  dispatch(actions.setStatus(status));\r\n};\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.resultCode === ResultCode.Success) {\r\n      dispatch(actions.setStatus(status));\r\n    }\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\nexport const saveMainAvatar = (file: string): ThunkType => async (dispatch) => {\r\n  const response = await profileAPI.saveMainAvatar(file);\r\n  if (response.resultCode === ResultCode.Success) {\r\n    dispatch(actions.saveMainAvatarSuccess(response.data));\r\n  }\r\n};\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (\r\n  dispatch: any,\r\n  getState\r\n) => {\r\n  const profileData = await profileAPI.saveProfile(profile);\r\n  if (profileData.resultCode === ResultCode.Success) {\r\n    const userId = getState().auth.id;\r\n    dispatch(getUserProfile(userId));\r\n  } else {\r\n    dispatch(stopSubmit('profile', { _error: profileData.messages[0] }));\r\n    return Promise.reject(profileData.messages[0]);\r\n  }\r\n};\r\n","import { InferActionsType } from './redux-store';\r\nexport type MessageType = {\r\n  id: number;\r\n  string: string;\r\n};\r\nexport type DialogType = {\r\n  id: number;\r\n  name: string;\r\n};\r\nconst initialState = {\r\n  messagesData: [\r\n    { id: 1, string: 'Hi!' },\r\n    { id: 2, string: 'How are you?!' },\r\n    { id: 3, string: 'Yo!!' },\r\n    { id: 4, string: 'LOL' },\r\n    { id: 5, string: 'KEKIS! =^_^= ' },\r\n  ] as Array<MessageType>,\r\n  dialogsData: [\r\n    { id: 1, name: 'Dymych' },\r\n    { id: 2, name: 'Alexander' },\r\n    { id: 3, name: 'Vika' },\r\n    { id: 4, name: 'Vasya' },\r\n    { id: 5, name: 'Kotik' },\r\n    { id: 6, name: 'Valeron' },\r\n  ] as Array<DialogType>,\r\n};\r\nexport type initialStateType = typeof initialState;\r\n\r\ntype AcctionsType = InferActionsType<typeof actions>;\r\n\r\nexport const dialogsReducer = (\r\n  state = initialState,\r\n  action: AcctionsType\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case 'SEND_MESSAGE':\r\n      return {\r\n        ...state,\r\n        messagesData: [\r\n          ...state.messagesData,\r\n          {\r\n            id: state.messagesData.length + 1,\r\n            string: action.textMessage,\r\n          },\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  sendMessageActionCreator: (textMessage: string) => {\r\n    return { type: 'SEND_MESSAGE', textMessage } as const;\r\n  },\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/noavatar.88962eb7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Spin.4217e8ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b4663671.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Vag6\",\"active\":\"Navbar_active__2uFoh\",\"item\":\"Navbar_item__1LS5H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__2PPJh\",\"users\":\"Users_users__MhE-w\",\"user\":\"Users_user__3QdBv\",\"user_info\":\"Users_user_info__38qMv\",\"user_avaBlock\":\"Users_user_avaBlock__Dgro7\",\"location\":\"Users_location__uqkFY\",\"person\":\"Users_person__26Vm0\",\"follow\":\"Users_follow__2XwVR\",\"unfollow\":\"Users_unfollow__ULXVF\",\"name\":\"Users_name__206ck\",\"status\":\"Users_status__3kX37\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_form\":\"Login_login_form__s-ZuX\",\"summaryErrorBlock\":\"Login_summaryErrorBlock__31waN\",\"summaryErrorBlock__message\":\"Login_summaryErrorBlock__message__1tpxQ\",\"remember_me\":\"Login_remember_me__biM8P\",\"login\":\"Login_login__3iGkt\",\"login_page\":\"Login_login_page__1z2ei\",\"captcha\":\"Login_captcha__2xf3C\"};","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\r\nimport { FieldValidatorType } from '../../../utils/validators';\r\n\r\ntype FormControlsPropsType = {\r\n  meta: WrappedFieldMetaProps\r\n};\r\n\r\nconst FormControl: React.FC<FormControlsPropsType> = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={`${styles.textareaContainer} ${styles.formControl} ${hasError ? styles.error : ''}`}\r\n    >\r\n      {children}\r\n      <div>{hasError && <span>{error}</span>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n  // const { input, meta, child, ...restProps } = props;\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n  // const { input, meta, child, ...restProps } = props;\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport function createField<FormKeysType extends string>(\r\n  placeholder: string | undefined,\r\n  name: FormKeysType,\r\n  validators: Array<FieldValidatorType>,\r\n  component: React.FC<WrappedFieldProps>,\r\n  { ...props }\r\n) {\r\n  return (\r\n    <Field\r\n      name={name}\r\n      placeholder={placeholder}\r\n      component={component}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  )\r\n};\r\n","type InitialStateType = typeof initialState;\r\nconst initialState = {};\r\nexport const sidebarReducer = (\r\n  state = initialState,\r\n  action: any\r\n): InitialStateType => {\r\n  return state;\r\n};\r\n","import { UserType } from '../types/types';\r\nimport { instance, ResultCode } from './api';\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage: number, pageSize: number) {\r\n    return instance\r\n      .get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n  follow(userId: number) {\r\n    return instance\r\n      .post<FollowUnfollowType>(`follow/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n  unfollow(userId: number) {\r\n    return instance\r\n      .delete<FollowUnfollowType>(`follow/${userId}`)\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport type GetUsersType = {\r\n  items: Array<UserType>;\r\n  totalCount: number;\r\n  error: string | null;\r\n};\r\n\r\nexport type FollowUnfollowType = {\r\n  resultCode: ResultCode;\r\n  data: {};\r\n  message: Array<string>;\r\n};\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProp) => {\r\n  return items.map((user) => {\r\n    if (user[objPropName] === itemId) {\r\n      return {\r\n        ...user,\r\n        ...newObjProp,\r\n      };\r\n    }\r\n    return user;\r\n  })\r\n}\r\n","import { UserType } from '../types/types';\r\nimport { FollowUnfollowType, usersAPI } from '../api/userApi';\r\nimport { updateObjectInArray } from '../utils/objectsHelper';\r\nimport { AppStateType, InferActionsType } from './redux-store';\r\nimport { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { ResultCode } from '../api/api';\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  users: [] as Array<UserType>,\r\n  totalUsersCount: null as number | null,\r\n  pageSize: 7,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>, // array of usersId\r\n};\r\ntype ActionsTypes = InferActionsType<typeof actions>;\r\n\r\nexport const usersReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case 'FOLLOW':\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case 'UNFOLLOW':\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {\r\n          followed: false,\r\n        }),\r\n      };\r\n    case 'SET_CURRENT_PAGE':\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case 'TOGGLE_IS_FETCHING':\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case 'TOGGLE_IS_FOLLOWING_PROGRESS':\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n      };\r\n    case 'SET_USERS_TOTAL_COUNT':\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype ThunkType = ThunkAction<\r\n  Promise<void>,\r\n  AppStateType,\r\n  unknown,\r\n  ActionsTypes\r\n>;\r\ntype DispatchType = Dispatch<ActionsTypes>;\r\nexport const getUsersThunk = (\r\n  currentPage: number,\r\n  pageSize: number\r\n): ThunkType => async (dispatch) => {\r\n  dispatch(actions.toggleIsFetching(true));\r\n  const data = await usersAPI.getUsers(currentPage, pageSize);\r\n  dispatch(actions.toggleIsFetching(false));\r\n  dispatch(actions.setUsers(data.items));\r\n  dispatch(actions.setCurrentPage(currentPage));\r\n  dispatch(actions.setUsersTotalCount(data.totalCount));\r\n};\r\nconst followUnfollowFlow = async (\r\n  dispatch: DispatchType,\r\n  userId: number,\r\n  apiMethod: (userId: number) => Promise<FollowUnfollowType>,\r\n  actionCreator: (userId: number) => ActionsTypes\r\n) => {\r\n  dispatch(actions.toggleIsFollowing(true, userId));\r\n  const response = await apiMethod(userId);\r\n  if (response.resultCode === ResultCode.Success) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(actions.toggleIsFollowing(false, userId));\r\n};\r\nexport const follow = (userId: number): ThunkType => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, userId, usersAPI.follow, actions.followSuccess);\r\n};\r\nexport const unfollow = (userId: number): ThunkType => async (dispatch) => {\r\n  followUnfollowFlow(\r\n    dispatch,\r\n    userId,\r\n    usersAPI.unfollow,\r\n    actions.unfollowSuccess\r\n  );\r\n};\r\n\r\nexport const actions = {\r\n  followSuccess: (userID: number) => {\r\n    // Utils\r\n    return { type: 'FOLLOW', userID } as const;\r\n  },\r\n  unfollowSuccess: (userID: number) => {\r\n    // Utils\r\n    return { type: 'UNFOLLOW', userID } as const;\r\n  },\r\n  setUsers: (users: Array<UserType>) => {\r\n    // Utils\r\n    return { type: 'SET_USERS', users } as const;\r\n  },\r\n  setCurrentPage: (currentPage: number) => {\r\n    // Utils\r\n    return { type: 'SET_CURRENT_PAGE', currentPage } as const;\r\n  },\r\n  setUsersTotalCount: (totalUsersCount: number) => {\r\n    // Utils\r\n    return { type: 'SET_USERS_TOTAL_COUNT', totalUsersCount } as const;\r\n  },\r\n  toggleIsFetching: (isFetching: boolean) => {\r\n    // Utils\r\n    return { type: 'TOGGLE_IS_FETCHING', isFetching } as const;\r\n  },\r\n  toggleIsFollowing: (isFetching: boolean, userId: number) => {\r\n    // Utils\r\n    return {\r\n      type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n      isFetching,\r\n      userId,\r\n    } as const;\r\n  },\r\n};\r\n","import { instance, ResultCode, ResultCodeForCaptcha } from './api';\r\n\r\ntype ResponseType<D = {}, RC = ResultCode> = {\r\n  data: D;\r\n  messages: Array<string>;\r\n  resultCode: RC;\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance\r\n      .get<MeResponseType>(`auth/me`)\r\n      .then((response) => response.data);\r\n  },\r\n  login(\r\n    email: string,\r\n    password: string,\r\n    rememberMe = false,\r\n    captcha: null | string = null\r\n  ) {\r\n    return instance\r\n      .post<LoginResponseType>(`auth/login`, {\r\n        email,\r\n        password,\r\n        rememberMe,\r\n        captcha,\r\n      })\r\n      .then((response) => response.data);\r\n  },\r\n  logout() {\r\n    return instance\r\n      .delete<LogoutResponseType>(`auth/login`)\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n\r\ntype MeResponseType = {\r\n  data: {\r\n    id: number;\r\n    email: string;\r\n    login: string;\r\n  };\r\n  resultCode: ResultCode;\r\n  messages: Array<string>;\r\n};\r\ntype LoginResponseType = {\r\n  data: {\r\n    userId: number;\r\n  };\r\n  resultCode: ResultCode | ResultCodeForCaptcha;\r\n  messages: Array<string>;\r\n};\r\ntype LogoutResponseType = {\r\n  data: {};\r\n  resultCode: ResultCode | ResultCodeForCaptcha;\r\n  messages: Array<string>;\r\n};\r\n","import { instance } from './api';\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance\r\n      .get<GetCaptchaUrlType>(`security/get-captcha-url`)\r\n      .then((response) => response.data.url);\r\n  },\r\n};\r\ntype GetCaptchaUrlType = {\r\n  url: string;\r\n};\r\n","import { ResultCode, ResultCodeForCaptcha } from './../api/api';\r\nimport { authAPI } from '../api/authApi';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { AppStateType, InferActionsType } from './redux-store';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { securityAPI } from '../api/securityApi';\r\n\r\ntype InitialStateType = {\r\n  id: null | number;\r\n  email: null | string;\r\n  login: null | string;\r\n  isFetching: boolean;\r\n  isAuth: boolean;\r\n  captchaURL: null | string;\r\n};\r\ntype ActionTypes = InferActionsType<typeof actions>;\r\n\r\nconst initialState: InitialStateType = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isFetching: false,\r\n  isAuth: false,\r\n  captchaURL: null,\r\n};\r\nexport const authReducer = (\r\n  state = initialState,\r\n  action: ActionTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET_USER_DATA':\r\n    case 'SET_CAPTCHA':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst actions = {\r\n  setAuthUserData: (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n  ) => {\r\n    return {\r\n      type: 'SET_USER_DATA',\r\n      payload: { id, email, login, isAuth },\r\n    } as const;\r\n  },\r\n  setCaptcha: (captchaURL: string | null) => {\r\n    return { type: 'SET_CAPTCHA', payload: { captchaURL } } as const;\r\n  },\r\n};\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>;\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n  const meData = await authAPI.me();\r\n  if (meData.resultCode === ResultCode.Success) {\r\n    let { id, email, login } = meData.data;\r\n    dispatch(actions.setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\nexport const login = (\r\n  email: string,\r\n  password: string,\r\n  rememberMe: boolean,\r\n  captcha: string\r\n): ThunkType => async (dispatch: any) => {\r\n  const loginData = await authAPI.login(email, password, rememberMe, captcha);\r\n  if (loginData.resultCode === ResultCode.Success) {\r\n    dispatch(getAuthUserData());\r\n    dispatch(actions.setCaptcha(null));\r\n  } else {\r\n    if (loginData.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n    const message =\r\n      loginData.messages.length > 0 ? loginData.messages[0] : 'some error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n};\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n  const captchaURL = await securityAPI.getCaptchaUrl();\r\n  dispatch(actions.setCaptcha(captchaURL));\r\n};\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n  const logoutData = await authAPI.logout();\r\n  if (logoutData.resultCode === ResultCode.Success) {\r\n    dispatch(actions.setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n","import { ThunkAction } from 'redux-thunk';\r\nimport { getAuthUserData } from './authReducer';\r\nimport { AppStateType, InferActionsType } from './redux-store';\r\n\r\nexport type InitialStateType = {\r\n  initialized: boolean;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  initialized: false,\r\n};\r\n\r\ntype ActionsType = InferActionsType<typeof actions>;\r\n\r\nexport const appReducer = (\r\n  state = initialState,\r\n  action: ActionsType\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'INITIALIZED_SUCCESS':\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst actions = {\r\n  initializedSuccess: () => {\r\n    return { type: 'INITIALIZED_SUCCESS' } as const;\r\n  },\r\n};\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>;\r\n\r\nexport const initApp = (): ThunkType => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  promise.then(() => {\r\n    dispatch(actions.initializedSuccess());\r\n  });\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { profileReducer } from './profileReducer';\r\nimport { dialogsReducer } from './dialogsReducer';\r\nimport { sidebarReducer } from './sidebarReducer';\r\nimport { usersReducer } from './usersReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { appReducer } from './appReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionsType<\r\n  T extends { [key: string]: (...args: any[]) => any }\r\n> = ReturnType<PropertiesTypes<T>>;\r\n\r\nconst rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  form: formReducer,\r\n});\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Users.module.css';\r\nimport '../../assets/styles/buttons.css';\r\nimport noavatar from '../../assets/image/noavatar.jpg';\r\n\r\nexport const User = ({ user, unfollow, follow, followingInProgress }) => {\r\n  return (\r\n    <div className={styles.user}>\r\n      <span className={styles.user_avaBlock}>\r\n        <div>\r\n          <NavLink to={`/profile/${user.id}`}>\r\n            <img className={styles.avatar} src={user.photos.small ? user.photos.small : noavatar} alt='avatar' />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {\r\n            user.followed\r\n              ? <button\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                className={`${styles.unfollow} btn`}\r\n                onClick={() => {\r\n                  unfollow(user.id);\r\n                }}>UnFollow</button>\r\n              : <button\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                className={`${styles.follow} btn`}\r\n                onClick={() => {\r\n                  follow(user.id);\r\n                }}>Follow</button>\r\n          }\r\n        </div>\r\n      </span>\r\n      <span className={styles.user_info}>\r\n        <span className={styles.person}>\r\n          <div className={styles.name}>{user.name}</div>\r\n          <div className={styles.status}>{user.status}</div>\r\n        </span>\r\n        <span className={styles.location}>\r\n          <div>{'Default_City'}</div>\r\n          <>{'Default_Country'}</>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport '../../../assets/styles/buttons.css';\r\nimport clNames from 'classnames';\r\n\r\ntype PaginatorPropsType = {\r\n  totalItemsCount: number | null\r\n  pageSize: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  currentPage: number\r\n  portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({ totalItemsCount, pageSize, onPageChanged, currentPage, portionSize = 7 }) => {\r\n\r\n  const pagesCount = Math.ceil(totalItemsCount as number / pageSize);\r\n  const pages: Array<number> = [];\r\n  for (let i = 1; i < pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  const portionCount = Math.ceil(pagesCount / portionSize);\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  // const [portionNumber, setPortionNumber] = useState<number>(1);\r\n  const leftLimit = (portionNumber - 1) * portionSize + 1;\r\n  const rightLimit = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.pages}>\r\n      {\r\n        portionNumber > 1 &&\r\n        <button\r\n          className={clNames(styles.paginator_btn, 'btn')}\r\n          onClick={() => { setPortionNumber(portionNumber - 1) }}\r\n        >prev</button>\r\n      }\r\n      {\r\n        pages.filter(filteringPage => filteringPage >= leftLimit && filteringPage <= rightLimit)\r\n          .map(page => {\r\n            return (\r\n              <div className={styles.page_container}>\r\n                <p\r\n                  key={page}\r\n                  className={clNames({ [styles.selected]: currentPage === page }, styles.pagination_item)}\r\n                  onClick={() => { onPageChanged(page) }}\r\n                >\r\n                  {page}\r\n                </p>\r\n              </div>)\r\n          })\r\n      }\r\n      {\r\n        portionCount > portionNumber &&\r\n        <button\r\n          className={clNames(styles.paginator_btn, 'btn')}\r\n          onClick={() => { setPortionNumber(portionNumber + 1) }}\r\n        >next</button>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { User } from './User';\r\nimport { Paginator } from '../common/Paginator/Paginator';\r\nimport styles from './Users.module.css';\r\nimport '../../assets/styles/buttons.css';\r\nimport { UserType } from '../../types/types';\r\n\r\ntype UsersPropsType = {\r\n  currentPage: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  totalUsersCount: number | null\r\n  pageSize: number\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n  unfollow: (userId: number) => void\r\n  follow: (userId: number) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = ({ currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props }) => {\r\n  return (\r\n    <div className={styles.users}>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n      {\r\n        users.map((user) => {\r\n          return <User\r\n            key={user.id}\r\n            user={user}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            followingInProgress={props.followingInProgress} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","import { createSelector } from 'reselect';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst Users = (state: AppStateType) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(Users, (users) => {\r\n  // dependency from results of Users -> users\r\n  return users.filter((u) => true);\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, getUsersThunk } from '../../redux/usersReducer';\r\nimport { Users } from './Users';\r\nimport { Preloader } from '../common/Preloader/Preloader';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress\r\n} from '../../redux/usersSelectors';\r\nimport { UserType } from '../../types/types';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n  users: Array<UserType>\r\n  pageSize: number\r\n  totalUsersCount: number | null\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: Array<number>\r\n}\r\ntype MapDispatchPropsType = {\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n  getUsersThunk: (currentPage: number, pageSize: number) => void\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nexport class UsersContainer extends React.Component<PropsType> {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsersThunk(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    const { pageSize } = this.props;\r\n    this.props.getUsersThunk(pageNumber, pageSize);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          followingInProgress={this.props.followingInProgress}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n        />\r\n      </>)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect<MapStatePropsType, MapDispatchPropsType, null, AppStateType>(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    getUsersThunk,\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer)\r\n","import React from \"react\";\r\nimport Logo from \"./logo.png\";\r\nimport s from \"./Header.module.css\";\r\nimport \"../../assets/styles/buttons.css\";\r\nimport \"../../assets/styles/buttons.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img className={s.logo} src={Logo} alt=\"logo\" />\r\n      <div>\r\n        {props.isAuth ? (\r\n          <div className={s.login_block}>\r\n            <div className={s.login_info}>\r\n              <p className={s.login_name}>{`Login: ${props.login}`}</p>\r\n              <span className={s.login_email}>{`Email: ${props.email}`}</span>\r\n            </div>\r\n            <button className=\"btn\" onClick={props.logout}>\r\n              Logout\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <NavLink className={s.login} to=\"/login\">\r\n            <button className='btn'>Login</button>\r\n          </NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/authReducer\";\r\nimport { compose } from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n  email: state.auth.email,\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, { logout }))(\r\n  HeaderContainer\r\n);\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.active}>My Profile </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.active}> Messages </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.active}> News </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.active}> Music </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.active}> Users </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.active}> Settings </NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n} ","import React from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport '../../assets/styles/buttons.css';\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { Input, createField } from \"../common/FormControls/FormControls\";\r\nimport { required } from \"../../utils/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype LoginFormOwnPropsType = {\r\n  captchaURL: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormDataType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({ handleSubmit, error, captchaURL }) => {\r\n  return (\r\n    <form className={styles.login_form} onSubmit={handleSubmit}>\r\n      <div className={styles.login_input}>\r\n        {createField<LoginFormDataTypeKeys>('Email', 'email', [required], Input, { type: 'text' })}\r\n      </div>\r\n      <div className={styles.login_input}>\r\n        {createField<LoginFormDataTypeKeys>('Password', 'password', [required], Input, { type: 'password' })}\r\n      </div>\r\n      <div className={styles.remember_me}>\r\n        <span>Remember me</span>\r\n        {createField<LoginFormDataTypeKeys>(undefined, 'rememberMe', [], Input, { type: 'checkbox' })}\r\n      </div>\r\n      {captchaURL && <img className={styles.captcha} src={captchaURL} alt='captcha' />}\r\n      {captchaURL && createField<LoginFormDataTypeKeys>('Symbols from captcha', 'captcha', [required], Input, { type: 'text' })}\r\n      <div className={styles.btn}>\r\n        <button className='btn' type=\"submit\">Sign In</button>\r\n      </div>\r\n      {\r\n        error && <div className={styles.summaryErrorBlock}>\r\n          <span className={styles.summaryErrorBlock__message}>{error}</span>\r\n        </div>\r\n      }\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormDataType, LoginFormOwnPropsType>({ form: \"login\" })(LoginForm);\r\ntype MapStatePropsType = {\r\n  captchaURL: string | null\r\n  isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n  login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\r\n  const onSubmit = (formData: LoginFormDataType) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  };\r\n  if (props.isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n  return (\r\n    <div className={styles.login_page}>\r\n      <p className={styles.login}>Login Form</p>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport type LoginFormDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n  captcha: string\r\n}\r\ntype LoginFormDataTypeKeys = Extract<keyof LoginFormDataType, string>;\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n  captchaURL: state.auth.captchaURL,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\n// import s from './News.module.css';\r\n\r\nexport const News = () => {\r\n  return (\r\n    <h2>\r\n      News\r\n    </h2>\r\n  )\r\n}","import React from 'react';\r\n// import s from './Music.module.css';\r\n\r\nexport const Music = () => {\r\n  return (\r\n    <h2>\r\n      Music\r\n    </h2>\r\n  )\r\n}","import React from 'react';\r\n// import s from './Settings.module.css';\r\n\r\nexport const Settings = () => {\r\n  return (\r\n    <h2>\r\n      Settings\r\n    </h2>\r\n  )\r\n}","import React, { Suspense } from 'react';\r\nimport { Preloader } from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n      </Suspense>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Provider, connect } from 'react-redux';\r\nimport { store } from './redux/redux-store';\r\nimport { Preloader } from './components/common/Preloader/Preloader';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Redirect } from 'react-router'\r\nimport { Navbar } from './components/Navbar/Navbar';\r\nimport Login from './components/Login/Login';\r\nimport { News } from './components/News/News';\r\nimport { Music } from './components/Music/Music';\r\nimport { Settings } from './components/Settings/Settings';\r\nimport { compose } from 'redux';\r\nimport { initApp } from './redux/appReducer';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  catchAllUnhandledErrors = (event) => {\r\n    event.preventDefault();\r\n    const reason = (event.reason || event.detail.reason);\r\n    console.log(reason);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initApp();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Switch>\r\n            <Route exact path='/' render={() => <Redirect to='/profile' />} />\r\n            <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\r\n            <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\r\n            <Route path='/users' render={() => <UsersContainer title={'Samurais:'} />} />\r\n            <Route path='/login' render={() => <Login />} />\r\n            <Route path='/news' component={News} />\r\n            <Route path='/music' component={Music} />\r\n            <Route path='/settings' component={Settings} />\r\n            <Route path='*' render={() => <div>404 NOT FOUND</div>} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialized: state.app.initialized,\r\n  }\r\n}\r\n\r\nconst AppContainer = compose(connect(mapStateToProps, { initApp }))(App);\r\n\r\nconst MainApplication = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store} >\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default MainApplication;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApplication from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainApplication />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__x8MWp\",\"logo\":\"Header_logo__2wgrv\",\"login\":\"Header_login__3v1B5\",\"login_block\":\"Header_login_block__3NOfN\",\"login_info\":\"Header_login_info__3WNEs\",\"login_name\":\"Header_login_name__1tVhY\",\"login_email\":\"Header_login_email__32mzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__WT5lm\",\"pagination_item\":\"Paginator_pagination_item__28fHr\",\"selected\":\"Paginator_selected__1XnlH\",\"paginator_btn\":\"Paginator_paginator_btn__3oQMh\",\"page_container\":\"Paginator_page_container__1mpFq\"};","import React from 'react';\r\nimport spin from '../../../assets/icon/Spin.svg';\r\nimport './spin.css';\r\n\r\nexport const Preloader: React.FC = () => {\r\n  return <img className='spin' src={spin} alt='spin-loader' />\r\n}","export type FieldValidatorType = (value: string) => string | undefined;\r\nexport const required: FieldValidatorType = (value) => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (\r\n  value\r\n) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaContainer\":\"FormControls_textareaContainer__3hh3Y\",\"formControl\":\"FormControls_formControl__2iUtI\",\"error\":\"FormControls_error__21R_3\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileDataForm/ProfileDataForm.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/@ant-design/icons-svg/es/asn/FileAddOutlined.js","../node_modules/@ant-design/icons/es/icons/FileAddOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","components/Profile/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileStatus/ProfileStatusHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","FileAddOutlined","ref","React","AntdIcon","Object","assign","icon","FileAddOutlinedSvg","displayName","EditOutlined","EditOutlinedSvg","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","ProfileDataFormItem","createField","Input","type","LookingJob","Textarea","class","ProfileDataFormTextarea","keys","contacts","map","key","style","margin","textTransform","onClick","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","styles","isOwner","autoFocus","value","onChange","event","currentTarget","onBlur","updateStatus","ProfileInfo","saveMainAvatar","saveProfile","info","full_name","fullName","formData","then","initialValues","activateEditMode","ava_block","ava_image","avatar","src","photos","large","small","defaultAvatar","alt","ava_uploader","upload_ava","e","target","files","length","id","placement","title","ava_label","htmlFor","fontSize","color","marginBottom","ProfileData","profile_data","shape","activate_edit_btn","aboutMe","about_me","lookingForAJobDescription","readOnly","checked","lookingForAJob","contactTitle","contactValue","Contact","contact","contact_title","contact_value","Post","post","message","likesCount","maxLengthFiled300","maxLengthCreator","PostReduxForm","newMessageForm","rows","MyPostsMemorized","memo","postElements","postsData","string","posts","postData","addPost","newPost","MyPostsContainer","profilePage","actions","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","withRouter"],"mappings":"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","file":"static/js/3.5c856e94.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppStateType } from '../redux/redux-store';\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\ntype MapPropsType = {\r\n  isAuth: boolean\r\n}\r\ntype DispatchPropsType = {\r\n}\r\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\r\n  const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n    const { isAuth, ...restProps } = props;\r\n    if (!props.isAuth) { return <Redirect to=\"/login\" />; }\r\n    return <Component {...restProps as WCP} />;\r\n  }\r\n  const ConnectedAuthRedirectComponent = connect<MapPropsType, DispatchPropsType, WCP, AppStateType>(mapStateToPropsForRedirect, {})(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Profile_img__2b16i\",\"descriptionBlock\":\"Profile_descriptionBlock__1yh0b\",\"profile\":\"Profile_profile__1AFSx\",\"avatar\":\"Profile_avatar__M0hBG\",\"info\":\"Profile_info__3hiuC\",\"full_name\":\"Profile_full_name__1E5WF\",\"about_me\":\"Profile_about_me__34LI6\",\"status\":\"Profile_status__1WU2f\",\"ava_block\":\"Profile_ava_block__1dEo2\",\"upload_ava\":\"Profile_upload_ava__3qNXs\",\"ava_uploader\":\"Profile_ava_uploader__2oz0C\",\"ava_label\":\"Profile_ava_label__3s5bQ\",\"contact_title\":\"Profile_contact_title__1psWs\",\"contact_value\":\"Profile_contact_value__2qvgr\",\"ava_image\":\"Profile_ava_image__3EZ5b\",\"profile_data\":\"Profile_profile_data__FOsEB\",\"activate_edit_btn\":\"Profile_activate_edit_btn__3o4so\",\"contact\":\"Profile_contact__2_klI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3UGrz\",\"newMessageForm\":\"MyPosts_newMessageForm__2-PnY\",\"btn\":\"MyPosts_btn__2ptgn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileDataFormItem\":\"ProfileDataForm_ProfileDataFormItem__2MJ5C\",\"LookingJob\":\"ProfileDataForm_LookingJob__1Pgd8\",\"ProfileDataFormTextarea\":\"ProfileDataForm_ProfileDataFormTextarea__2LphY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__YI1OF\"};","// This icon file is generated automatically.\nvar FileAddOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z\" } }] }, \"name\": \"file-add\", \"theme\": \"outlined\" };\nexport default FileAddOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FileAddOutlinedSvg from \"@ant-design/icons-svg/es/asn/FileAddOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FileAddOutlined = function FileAddOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: FileAddOutlinedSvg\n  }));\n};\n\nFileAddOutlined.displayName = 'FileAddOutlined';\nexport default /*#__PURE__*/React.forwardRef(FileAddOutlined);","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { InjectedFormProps, reduxForm } from 'redux-form';\r\n\r\nimport {\r\n  createField,\r\n  GetStringKeys,\r\n  Input,\r\n  Textarea\r\n} from '../../common/FormControls/FormControls';\r\nimport { ProfileType } from '../../../types/types';\r\n\r\nimport s from './ProfileDataForm.module.css';\r\nimport '../../../assets/styles/buttons.css';\r\n\r\ntype PropsType = {\r\n  profile: ProfileType;\r\n};\r\n\r\ntype ProfileTypeKeys = GetStringKeys<ProfileType>;\r\n\r\nconst ProfileDataForm: React.FC<\r\n  InjectedFormProps<ProfileType, PropsType> & PropsType\r\n> = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={s.ProfileDataFormItem}>\r\n        Full Name:\r\n        {createField<ProfileTypeKeys>('Full Name', 'fullName', [], Input, {\r\n          type: 'text'\r\n        })}\r\n      </div>\r\n      <div className={s.LookingJob}>\r\n        Looking for a job:\r\n        <div>\r\n          {createField<ProfileTypeKeys>('', 'lookingForAJob', [], Input, {\r\n            type: 'checkbox'\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className={s.ProfileDataFormItem}>\r\n        My skills:\r\n        {createField<ProfileTypeKeys>(\r\n          'My skills',\r\n          'lookingForAJobDescription',\r\n          [],\r\n          Textarea,\r\n          { type: 'text', class: s.ProfileDataFormTextarea }\r\n        )}\r\n      </div>\r\n      <div className={s.ProfileDataFormItem}>\r\n        About me:\r\n        {createField<ProfileTypeKeys>('About me', 'aboutMe', [], Textarea, {\r\n          type: 'text',\r\n          class: s.ProfileDataFormTextarea\r\n        })}\r\n      </div>\r\n      {error && (\r\n        <div>\r\n          <span>{error}</span>\r\n        </div>\r\n      )}\r\n      {Object.keys(profile.contacts).map((key) => {\r\n        return (\r\n          <div key={key} style={{ margin: '5px 0' }}>\r\n            <b style={{ textTransform: 'capitalize' }}>{key}:</b>\r\n            {createField(key, 'contacts.' + key, [], Input, { type: 'text' })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div>\r\n        <Button style={{ margin: '5px 0' }} type='primary' onClick={handleSubmit}>\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm<ProfileType, PropsType>({\r\n  form: 'profile'\r\n})(ProfileDataForm);\r\nexport default ProfileDataReduxForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport styles from '../Profile.module.css';\r\n\r\ntype ProfileStatusPropsType = {\r\n  status: string;\r\n  isOwner: boolean;\r\n  updateStatus: (status: string) => void;\r\n};\r\n\r\nexport const ProfileStatusHooks: React.FC<ProfileStatusPropsType> = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    props.isOwner && setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <p className={styles.status} onClick={activateEditMode}>\r\n            {props.status || 'Set status..'}\r\n          </p>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus\r\n            value={status}\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Tooltip, Button } from 'antd';\r\nimport { EditOutlined, FileAddOutlined } from '@ant-design/icons';\r\n\r\nimport { Preloader } from '../../';\r\nimport { ContactsType, ProfileType } from '../../../types/types';\r\nimport ProfileDataReduxForm from '../ProfileDataForm/ProfileDataForm';\r\nimport { ProfileStatusHooks } from '../ProfileStatus/ProfileStatusHooks';\r\n\r\nimport defaultAvatar from '../../../assets/image/noavatar.jpg';\r\n\r\nimport s from '../Profile.module.css';\r\nimport '../../../assets/styles/buttons.css';\r\n\r\ntype PropsType = {\r\n  profile: ProfileType | null;\r\n  status: string;\r\n  updateStatus: (status: string) => void;\r\n  isOwner: boolean;\r\n  saveMainAvatar: (file: File) => void;\r\n  saveProfile: (formData: ProfileType) => Promise<void>;\r\n};\r\nexport const ProfileInfo: React.FC<PropsType> = ({\r\n  profile,\r\n  status,\r\n  isOwner,\r\n  updateStatus,\r\n  saveMainAvatar,\r\n  saveProfile\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onAvaSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      saveMainAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (formData: ProfileType) => {\r\n    // todo: remove then from this place\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className={s.profile}>\r\n        <div className={s.info}>\r\n          <div className={s.full_name}>{profile.fullName}</div>\r\n          <ProfileStatusHooks\r\n            status={status}\r\n            updateStatus={updateStatus}\r\n            isOwner={isOwner}\r\n          />\r\n          {editMode ? (\r\n            <ProfileDataReduxForm\r\n              onSubmit={onSubmit}\r\n              initialValues={profile}\r\n              profile={profile}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              activateEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className={s.ava_block}>\r\n          <div className={s.ava_image}>\r\n            <img\r\n              className={s.avatar}\r\n              src={\r\n                profile.photos?.large || profile.photos?.small || defaultAvatar\r\n              }\r\n              alt='ava'\r\n            />\r\n            {isOwner && (\r\n              <div className={s.ava_uploader}>\r\n                <input\r\n                  className={s.upload_ava}\r\n                  onChange={onAvaSelected}\r\n                  type='file'\r\n                  id='file'\r\n                />\r\n                <Tooltip placement='bottom' title='Change and upload avatar'>\r\n                  <label className={s.ava_label} htmlFor='file'>\r\n                    <FileAddOutlined\r\n                      style={{\r\n                        fontSize: '18px',\r\n                        color: 'lightcyan',\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                  </label>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\ntype ProfileDataPropsType = {\r\n  profile: ProfileType;\r\n  isOwner: boolean;\r\n  activateEditMode: () => void;\r\n};\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({\r\n  profile,\r\n  isOwner,\r\n  activateEditMode\r\n}) => {\r\n  return (\r\n    <div className={s.profile_data}>\r\n      {isOwner && (\r\n        <Tooltip placement='left' title='Edit'>\r\n          <Button\r\n            shape='round'\r\n            className={`${s.activate_edit_btn}`}\r\n            onClick={activateEditMode}\r\n            icon={<EditOutlined />}\r\n          />\r\n        </Tooltip>\r\n      )}\r\n      {profile.aboutMe && (\r\n        <div className={s.about_me}>\r\n          <b>About me:</b>\r\n          <i>{` ${profile.aboutMe}`}</i>\r\n        </div>\r\n      )}\r\n      {profile.lookingForAJobDescription !== 'null' && (\r\n        <div className={s.about_me}>\r\n          <b>My skills:</b>\r\n          {` ${profile.lookingForAJobDescription}`}\r\n        </div>\r\n      )}\r\n      <label className={s.about_me} htmlFor='lookingForaJob'>\r\n        <b>Looking for a Job</b>\r\n      </label>\r\n      <input\r\n        id='lookingForaJob'\r\n        type='checkbox'\r\n        readOnly\r\n        checked={profile.lookingForAJob}\r\n      />\r\n      {Object.keys(profile.contacts).map((key) => {\r\n        return (\r\n          <Contact\r\n            key={key}\r\n            contactTitle={key}\r\n            contactValue={profile.contacts[key as keyof ContactsType]}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\ntype ContactPropsType = {\r\n  contactTitle: string;\r\n  contactValue: string;\r\n};\r\nconst Contact: React.FC<ContactPropsType> = ({\r\n  contactTitle,\r\n  contactValue\r\n}) => {\r\n  return contactValue && contactValue.length ? (\r\n    <div className={s.contact}>\r\n      <div className={s.contact_title}>{`${contactTitle}:`}</div>\r\n      <div className={s.contact_value}>{` ${contactValue}`}</div>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from './Post.module.css';\r\ntype PropsType = {\r\n  message: string\r\n  likesCount: number\r\n}\r\n\r\nexport const Post: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <img src='https://avatars.mds.yandex.net/get-pdb/1352825/a5f8fbd7-515e-49f8-81d6-be55a2daac92/s600' alt='post' />\r\n      {props.message}\r\n      <br />\r\n      <span>Like {props.likesCount}</span>\r\n    </div>\r\n  )\r\n}","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport { InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator } from '../../../../utils/validators';\r\nimport { createField, GetStringKeys, Textarea } from '../../../common/FormControls/FormControls';\r\nimport styles from '../MyPosts.module.css';\r\n\r\nconst maxLengthFiled300 = maxLengthCreator(300);\r\n\r\ntype PropsType = {\r\n}\r\nconst PostForm: React.FC<InjectedFormProps<PostFormDataType, PropsType> & PropsType> = (props) => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form className={styles.newMessageForm} onSubmit={handleSubmit}>\r\n      {createField<PostFormDataTypeKeys>('Enter new post text..', 'newPost', [maxLengthFiled300], Textarea, { type: 'text', rows: 1 })}\r\n      <Button type='primary' onClick={handleSubmit}>Add post</Button>\r\n    </form>\r\n  );\r\n};\r\nexport type PostFormDataType = {\r\n  newPost: string\r\n}\r\ntype PostFormDataTypeKeys = GetStringKeys<PostFormDataType>;\r\n\r\nconst PostReduxForm = reduxForm<PostFormDataType, PropsType>({ form: \"posts\" })(PostForm);\r\n\r\nexport default PostReduxForm;","import React from \"react\";\r\n\r\nimport { Post } from \"./Post/Post\";\r\nimport { PostType } from \"../../../types/types\";\r\nimport PostReduxFrom, { PostFormDataType } from './AddPostForm/AddPostForm';\r\n\r\nimport styles from \"./MyPosts.module.css\";\r\nimport '../../../assets/styles/buttons.css';\r\n\r\nexport type MapPropsType = {\r\n  postsData: Array<PostType>\r\n}\r\n\r\nexport type MapDispatchType = {\r\n  addPost: (newPost: string) => void\r\n}\r\n\r\nconst MyPosts: React.FC<MapPropsType & MapDispatchType> = (props) => {\r\n  const postElements = props.postsData.map((post) => (\r\n    <Post\r\n      key={props.postsData.length - post.id}\r\n      message={post.string}\r\n      likesCount={post.likesCount}\r\n    />\r\n  ));\r\n\r\n  const onSubmitPost = (postData: PostFormDataType) => {\r\n    props.addPost(postData.newPost);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.posts}>\r\n      <PostReduxFrom onSubmit={onSubmitPost} />\r\n      {postElements}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MyPostsMemorized = React.memo(MyPosts);\r\n\r\nexport default MyPostsMemorized;\r\n","import MyPostsMemorized, { MapDispatchType, MapPropsType } from \"./MyPosts\";\r\nimport { actions } from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\n\r\nconst mapStateToProps = (state: AppStateType): MapPropsType => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer: React.ComponentType = connect<MapPropsType, MapDispatchType, {}, AppStateType>(\r\n  mapStateToProps,\r\n  { addPost: actions.newPost }\r\n)(MyPostsMemorized);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nimport { ProfileType } from \"../../types/types\";\r\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\ntype PropsType = {\r\n  profile: ProfileType | null\r\n  status: string\r\n  isOwner: boolean\r\n  updateStatus: (status: string) => void\r\n  saveMainAvatar: (file: File) => void\r\n  saveProfile: (formData: ProfileType) => Promise<void>\r\n}\r\nexport const Profile: React.FC<PropsType> = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  saveMainAvatar,\r\n  saveProfile\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        saveMainAvatar={saveMainAvatar}\r\n        saveProfile={saveProfile}\r\n      />\r\n      <hr/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Profile } from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  saveMainAvatar,\r\n  saveProfile\r\n} from \"../../redux/profileReducer\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { ProfileType } from \"../../types/types\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype MapDispatchPtopsType = {\r\n  getUserProfile: (userId: number) => Promise<void>\r\n  getStatus: (userId: number) => Promise<void>\r\n  updateStatus: (status: string) => Promise<void>\r\n  saveMainAvatar: (file: File) => Promise<void>\r\n  saveProfile: (profile: ProfileType) => Promise<void>\r\n}\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\ntype PropsType = MapPropsType & MapDispatchPtopsType & RouteComponentProps<PathParamsType>;\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n  refreshProfile() {\r\n    let userId: number | null = +this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) { this.props.history.push('/login'); }\r\n    }\r\n    this.props.getUserProfile(userId as number);\r\n    this.props.getStatus(userId as number);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        saveMainAvatar={this.props.saveMainAvatar}\r\n      />\r\n    );\r\n  }\r\n}\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>;\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  authorizedUserId: state.auth.id,\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    saveMainAvatar,\r\n    saveProfile,\r\n  }),\r\n  withRouter, // connecting to url parameter\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}